"use strict";(self.webpackChunknotas_personales=self.webpackChunknotas_personales||[]).push([[1855],{1850:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>l,contentTitle:()=>t,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var r=n(4848),a=n(8453);const s={title:"FilterChainProxy",sidebar_position:3},t=void 0,o={id:"Lenguajes de programaci\xf3n/Java/Spring/Spring Security/Arquitectura/FilterChainProxy",title:"FilterChainProxy",description:"La FilterChainProxy es una clase especial proporcionada por Spring Security que se utiliza para manejar la seguridad en las aplicaciones web. Su funci\xf3n principal es delegar el control de la seguridad a m\xfaltiples instancias de filtros a trav\xe9s de lo que se conoce como SecurityFilterChain. Esto permite una configuraci\xf3n m\xe1s flexible y modular de la seguridad en tu aplicaci\xf3n.",source:"@site/docs/Lenguajes de programaci\xf3n/Java/Spring/Spring Security/Arquitectura/FilterChainProxy.md",sourceDirName:"Lenguajes de programaci\xf3n/Java/Spring/Spring Security/Arquitectura",slug:"/Lenguajes de programaci\xf3n/Java/Spring/Spring Security/Arquitectura/FilterChainProxy",permalink:"/notas-de-aprendizaje/docs/Lenguajes de programaci\xf3n/Java/Spring/Spring Security/Arquitectura/FilterChainProxy",draft:!1,unlisted:!1,editUrl:"https://github.com/SanRM/notas-de-aprendizaje/edit/main/docs/Lenguajes de programaci\xf3n/Java/Spring/Spring Security/Arquitectura/FilterChainProxy.md",tags:[],version:"current",lastUpdatedBy:"SanRM",lastUpdatedAt:1728966437e3,sidebarPosition:3,frontMatter:{title:"FilterChainProxy",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"DelegatingFilterProxy",permalink:"/notas-de-aprendizaje/docs/Lenguajes de programaci\xf3n/Java/Spring/Spring Security/Arquitectura/DelegatingFilterProxy"},next:{title:"SecurityFilterChain",permalink:"/notas-de-aprendizaje/docs/Lenguajes de programaci\xf3n/Java/Spring/Spring Security/Arquitectura/SecurityFilterChain"}},l={},c=[{value:"Contexto de FilterChainProxy",id:"contexto-de-filterchainproxy",level:3},{value:"Proceso de Funcionamiento de FilterChainProxy",id:"proceso-de-funcionamiento-de-filterchainproxy",level:3},{value:"Beneficios de FilterChainProxy",id:"beneficios-de-filterchainproxy",level:3}];function d(e){const i={code:"code",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",...(0,a.R)(),...e.components},{Card:n}=i;return n||function(e,i){throw new Error("Expected "+(i?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Card",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(i.p,{children:["La ",(0,r.jsx)(i.strong,{children:"FilterChainProxy"})," es una clase especial proporcionada por Spring Security que se utiliza para manejar la seguridad en las aplicaciones web. Su funci\xf3n principal es delegar el control de la seguridad a m\xfaltiples instancias de filtros a trav\xe9s de lo que se conoce como ",(0,r.jsx)(i.strong,{children:"SecurityFilterChain"}),". Esto permite una configuraci\xf3n m\xe1s flexible y modular de la seguridad en tu aplicaci\xf3n."]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsx)(i.h3,{id:"contexto-de-filterchainproxy",children:"Contexto de FilterChainProxy"}),(0,r.jsxs)(i.ol,{children:["\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"Delegaci\xf3n a M\xfaltiples Instancias"}),": El ",(0,r.jsx)(i.strong,{children:"FilterChainProxy"})," permite que una solicitud HTTP pase a trav\xe9s de varias instancias de filtros de seguridad. Esto es \xfatil porque cada filtro puede encargarse de diferentes aspectos de la seguridad, como la autenticaci\xf3n, la autorizaci\xf3n, y la protecci\xf3n contra ataques."]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"SecurityFilterChain"}),": Este es un concepto clave en Spring Security. Un ",(0,r.jsx)(i.strong,{children:"SecurityFilterChain"})," es una colecci\xf3n de filtros de seguridad que se aplican a una solicitud. Cada cadena de filtros puede configurarse de manera independiente, lo que permite una gran flexibilidad en la configuraci\xf3n de seguridad."]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"Bean de Spring"}),": Como ",(0,r.jsx)(i.code,{children:"FilterChainProxy"})," es un Bean de Spring, se suele envolver en un ",(0,r.jsx)(i.strong,{children:"DelegatingFilterProxy"}),". Esto significa que se registra en el contenedor de servlets y permite que el flujo de solicitudes pase a trav\xe9s de la cadena de filtros de seguridad gestionada por Spring."]}),"\n"]}),"\n"]})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsx)(i.h3,{id:"proceso-de-funcionamiento-de-filterchainproxy",children:"Proceso de Funcionamiento de FilterChainProxy"}),(0,r.jsxs)(i.ol,{children:["\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"Manejo de Solicitudes"}),": Cuando una solicitud llega al servidor, el ",(0,r.jsx)(i.code,{children:"FilterChainProxy"})," se encarga de delegar esta solicitud a los diferentes filtros que ha configurado en sus instancias de ",(0,r.jsx)(i.code,{children:"SecurityFilterChain"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"Ejemplo de Estructura"}),": A continuaci\xf3n se presenta una imagen que ilustra c\xf3mo se relaciona el ",(0,r.jsx)(i.code,{children:"FilterChainProxy"})," con las instancias de filtro y la cadena de filtros."]}),"\n"]}),"\n"]}),(0,r.jsx)(n,{color:"dark",header:"Figura 3. FilterChainProxy",textAlign:"center",children:(0,r.jsx)(i.p,{children:(0,r.jsx)(i.img,{src:"https://docs.spring.io/spring-security/reference/_images/servlet/architecture/filterchainproxy.png",alt:"Spring seurity image"})})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsx)(i.h3,{id:"beneficios-de-filterchainproxy",children:"Beneficios de FilterChainProxy"}),(0,r.jsxs)(i.ol,{children:["\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"Flexibilidad"}),": Al permitir m\xfaltiples cadenas de filtros, el ",(0,r.jsx)(i.code,{children:"FilterChainProxy"})," proporciona una gran flexibilidad. Puedes tener diferentes configuraciones de seguridad para diferentes partes de tu aplicaci\xf3n. Por ejemplo, podr\xedas tener una cadena de filtros para la secci\xf3n de administraci\xf3n de la aplicaci\xf3n y otra para la secci\xf3n p\xfablica."]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"Modularidad"}),": La separaci\xf3n de la l\xf3gica de seguridad en diferentes filtros facilita la gesti\xf3n del c\xf3digo. Puedes agregar, quitar o modificar filtros sin afectar el resto de la configuraci\xf3n de seguridad de la aplicaci\xf3n."]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"Integraci\xf3n con Spring"}),": Al estar integrado con el contexto de Spring, el ",(0,r.jsx)(i.code,{children:"FilterChainProxy"})," puede aprovechar todos los beneficios que ofrece Spring, como la gesti\xf3n de Beans, la inyecci\xf3n de dependencias, y la configuraci\xf3n basada en anotaciones."]}),"\n"]}),"\n"]})]}),"\n",(0,r.jsx)(n,{children:(0,r.jsx)(i.p,{children:"El FilterChainProxy es un componente esencial en Spring Security que permite gestionar m\xfaltiples instancias de filtros de seguridad de manera flexible y modular. Al facilitar la configuraci\xf3n de seguridad en aplicaciones web, ayuda a protegerlas de diversas amenazas mientras se mantiene un c\xf3digo limpio y mantenible."})})]})}function u(e={}){const{wrapper:i}={...(0,a.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>t,x:()=>o});var r=n(6540);const a={},s=r.createContext(a);function t(e){const i=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:t(e.components),r.createElement(s.Provider,{value:i},e.children)}}}]);