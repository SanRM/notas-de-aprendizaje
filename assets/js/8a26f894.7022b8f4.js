"use strict";(self.webpackChunknotas_personales=self.webpackChunknotas_personales||[]).push([[8915],{4459:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>t,contentTitle:()=>s,default:()=>p,frontMatter:()=>l,metadata:()=>i,toc:()=>c});var r=n(4848),o=n(8453);const l={sidebar_position:2},s=void 0,i={id:"Frameworks/Angular/Interpolaci\xf3n",title:"Interpolaci\xf3n",description:"Uso de Interpolaci\xf3n en Angular para Actualizar la Clase de un Componente",source:"@site/docs/Frameworks/Angular/Interpolaci\xf3n.md",sourceDirName:"Frameworks/Angular",slug:"/Frameworks/Angular/Interpolaci\xf3n",permalink:"/notas-de-aprendizaje/docs/Frameworks/Angular/Interpolaci\xf3n",draft:!1,unlisted:!1,editUrl:"https://github.com/SanRM/notas-de-aprendizaje/edit/main/docs/Frameworks/Angular/Interpolaci\xf3n.md",tags:[],version:"current",lastUpdatedBy:"SanRM",lastUpdatedAt:1730660085e3,sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Componentes",permalink:"/notas-de-aprendizaje/docs/Frameworks/Angular/Componentes"},next:{title:"Composici\xf3n de componentes",permalink:"/notas-de-aprendizaje/docs/Frameworks/Angular/Composici\xf3n de componentes"}},t={},c=[{value:"Uso de Interpolaci\xf3n en Angular para Actualizar la Clase de un Componente",id:"uso-de-interpolaci\xf3n-en-angular-para-actualizar-la-clase-de-un-componente",level:3},{value:"Paso 1: Agregar una Propiedad a la Clase del Componente",id:"paso-1-agregar-una-propiedad-a-la-clase-del-componente",level:4},{value:"Paso 2: Mostrar el Valor de la Propiedad en la Plantilla Usando Interpolaci\xf3n",id:"paso-2-mostrar-el-valor-de-la-propiedad-en-la-plantilla-usando-interpolaci\xf3n",level:4},{value:"Paso 3: Evaluaci\xf3n de Expresiones con Interpolaci\xf3n",id:"paso-3-evaluaci\xf3n-de-expresiones-con-interpolaci\xf3n",level:4}];function d(e){const a={code:"code",h3:"h3",h4:"h4",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components},{Card:n}=a;return n||function(e,a){throw new Error("Expected "+(a?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Card",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(a.h3,{id:"uso-de-interpolaci\xf3n-en-angular-para-actualizar-la-clase-de-un-componente",children:"Uso de Interpolaci\xf3n en Angular para Actualizar la Clase de un Componente"}),"\n",(0,r.jsx)(a.p,{children:"En Angular, la l\xf3gica y el comportamiento de un componente se definen en su clase TypeScript. Estas clases permiten crear propiedades y m\xe9todos que pueden ser utilizados dentro de la plantilla del componente para mostrar datos y manipular la vista."}),"\n",(0,r.jsxs)(a.p,{children:["En este ejemplo, aprenderemos c\xf3mo agregar una propiedad a la clase del componente y c\xf3mo mostrar su valor en la plantilla utilizando ",(0,r.jsx)(a.strong,{children:"Interpolaci\xf3n"}),", una t\xe9cnica clave en Angular para insertar datos din\xe1micos en el HTML."]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsx)(a.h4,{id:"paso-1-agregar-una-propiedad-a-la-clase-del-componente",children:"Paso 1: Agregar una Propiedad a la Clase del Componente"}),(0,r.jsxs)(a.p,{children:["Primero, agreguemos una propiedad llamada ",(0,r.jsx)(a.code,{children:"city"})," a la clase del componente ",(0,r.jsx)(a.code,{children:"AppComponent"}),":"]}),(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-typescript",children:"export class AppComponent {\r\n    city = 'San Francisco';\r\n}\n"})}),(0,r.jsxs)(a.p,{children:["En este caso, hemos a\xf1adido la propiedad ",(0,r.jsx)(a.code,{children:"city"})," con el valor ",(0,r.jsx)(a.code,{children:'"San Francisco"'}),". En TypeScript, el tipo de dato (",(0,r.jsx)(a.code,{children:"string"}),") puede omitirse debido a la ",(0,r.jsx)(a.strong,{children:"inferencia de tipos"}),", que permite que TypeScript determine el tipo en funci\xf3n del valor inicial. Esto hace que el c\xf3digo sea m\xe1s legible y conciso. Ahora, la propiedad ",(0,r.jsx)(a.code,{children:"city"})," est\xe1 lista para ser usada en la plantilla."]})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsx)(a.h4,{id:"paso-2-mostrar-el-valor-de-la-propiedad-en-la-plantilla-usando-interpolaci\xf3n",children:"Paso 2: Mostrar el Valor de la Propiedad en la Plantilla Usando Interpolaci\xf3n"}),(0,r.jsxs)(a.p,{children:["En Angular, la ",(0,r.jsx)(a.strong,{children:"interpolaci\xf3n"})," nos permite insertar el valor de una propiedad de la clase del componente directamente en el HTML. Para hacer esto, usamos la sintaxis ",(0,r.jsx)(a.code,{children:"{{ }}"}),", dentro de la cual colocamos la propiedad o expresi\xf3n que queremos mostrar."]}),(0,r.jsxs)(a.p,{children:["Actualicemos la plantilla para incluir ",(0,r.jsx)(a.code,{children:"{{ city }}"}),":"]}),(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-typescript",children:"@Component({\r\n    selector: 'app-root',\r\n  template: `Hello {{ city }}`,\r\n})\n"})}),(0,r.jsxs)(a.p,{children:["Aqu\xed, ",(0,r.jsx)(a.code,{children:"{{ city }}"})," hace que Angular eval\xfae y muestre el valor de ",(0,r.jsx)(a.code,{children:"city"})," dentro de la plantilla. Esto generar\xe1 el texto ",(0,r.jsx)(a.strong,{children:'"Hello San Francisco"'})," en la interfaz."]})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsx)(a.h4,{id:"paso-3-evaluaci\xf3n-de-expresiones-con-interpolaci\xf3n",children:"Paso 3: Evaluaci\xf3n de Expresiones con Interpolaci\xf3n"}),(0,r.jsxs)(a.p,{children:["La interpolaci\xf3n tambi\xe9n permite evaluar expresiones. Por ejemplo, agreguemos la expresi\xf3n ",(0,r.jsx)(a.code,{children:"{{ 1 + 1 }}"})," a la plantilla junto a ",(0,r.jsx)(a.code,{children:"{{ city }}"}),":"]}),(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-typescript",children:"@Component({\r\n    selector: 'app-root',\r\n  template: `Hello {{ city }}, {{ 1 + 1 }}`,\r\n})\n"})}),(0,r.jsxs)(a.p,{children:["En este caso, Angular eval\xfaa ",(0,r.jsx)(a.code,{children:"{{ 1 + 1 }}"})," y muestra el resultado junto a ",(0,r.jsx)(a.code,{children:"city"}),", resultando en: ",(0,r.jsx)(a.strong,{children:'"Hello San Francisco, 2"'}),"."]})]}),"\n",(0,r.jsx)(a.p,{children:"La interpolaci\xf3n es una herramienta esencial en Angular para mostrar datos din\xe1micos en la vista. Permite vincular valores de la clase del componente y evaluar expresiones directamente en el HTML, facilitando la creaci\xf3n de interfaces de usuario interactivas y personalizadas."})]})}function p(e={}){const{wrapper:a}={...(0,o.R)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,a,n)=>{n.d(a,{R:()=>s,x:()=>i});var r=n(6540);const o={},l=r.createContext(o);function s(e){const a=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function i(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),r.createElement(l.Provider,{value:a},e.children)}}}]);