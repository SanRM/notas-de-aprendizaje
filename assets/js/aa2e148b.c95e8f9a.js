"use strict";(self.webpackChunknotas_personales=self.webpackChunknotas_personales||[]).push([[8355],{8598:(e,i,s)=>{s.r(i),s.d(i,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>t,toc:()=>c});var n=s(4848),r=s(8453);const a={title:"\xbfQu\xe9 son los filtros?",sidebar_position:1},l=void 0,t={id:"Lenguajes de programaci\xf3n/Java/Spring/Spring Security/Arquitectura/Los Filtros",title:"\xbfQu\xe9 son los filtros?",description:"Los Filtros (Filters) son componentes que interceptan las solicitudes HTTP (que son las peticiones que los clientes hacen al servidor) y pueden realizar acciones espec\xedficas antes o despu\xe9s de que esas solicitudes sean procesadas por la aplicaci\xf3n. En el contexto de Spring Security, los filtros son cruciales para gestionar la seguridad de las aplicaciones web.",source:"@site/docs/Lenguajes de programaci\xf3n/Java/Spring/Spring Security/Arquitectura/Los Filtros.md",sourceDirName:"Lenguajes de programaci\xf3n/Java/Spring/Spring Security/Arquitectura",slug:"/Lenguajes de programaci\xf3n/Java/Spring/Spring Security/Arquitectura/Los Filtros",permalink:"/notas-de-aprendizaje/docs/Lenguajes de programaci\xf3n/Java/Spring/Spring Security/Arquitectura/Los Filtros",draft:!1,unlisted:!1,editUrl:"https://github.com/SanRM/notas-de-aprendizaje/edit/main/docs/Lenguajes de programaci\xf3n/Java/Spring/Spring Security/Arquitectura/Los Filtros.md",tags:[],version:"current",lastUpdatedBy:"SanRM",lastUpdatedAt:1728966437e3,sidebarPosition:1,frontMatter:{title:"\xbfQu\xe9 son los filtros?",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Arquitectura (Visi\xf3n General)",permalink:"/notas-de-aprendizaje/docs/Lenguajes de programaci\xf3n/Java/Spring/Spring Security/Arquitectura/"},next:{title:"DelegatingFilterProxy",permalink:"/notas-de-aprendizaje/docs/Lenguajes de programaci\xf3n/Java/Spring/Spring Security/Arquitectura/DelegatingFilterProxy"}},o={},c=[{value:"Cadena de Filtros (Filter Chain)",id:"cadena-de-filtros-filter-chain",level:3},{value:"Proceso de una Solicitud HTTP",id:"proceso-de-una-solicitud-http",level:4},{value:"Ejemplo de Uso de Filtros",id:"ejemplo-de-uso-de-filtros",level:3},{value:"Desglose del C\xf3digo",id:"desglose-del-c\xf3digo",level:4},{value:"Importancia del Orden de los Filtros",id:"importancia-del-orden-de-los-filtros",level:3}];function d(e){const i={code:"code",h3:"h3",h4:"h4",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components},{Card:s}=i;return s||function(e,i){throw new Error("Expected "+(i?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Card",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(i.p,{children:["Los ",(0,n.jsx)(i.strong,{children:"Filtros"})," (Filters) son componentes que interceptan las solicitudes HTTP (que son las peticiones que los clientes hacen al servidor) y pueden realizar acciones espec\xedficas antes o despu\xe9s de que esas solicitudes sean procesadas por la aplicaci\xf3n. En el contexto de ",(0,n.jsx)(i.strong,{children:"Spring Security"}),", los filtros son cruciales para gestionar la seguridad de las aplicaciones web."]}),"\n",(0,n.jsxs)(s,{children:[(0,n.jsx)(i.h3,{id:"cadena-de-filtros-filter-chain",children:"Cadena de Filtros (Filter Chain)"}),(0,n.jsxs)(i.p,{children:["La ",(0,n.jsx)(i.strong,{children:"Cadena de Filtros"})," (FilterChain) es una secuencia de filtros que se aplican a una solicitud. Imagina que cada solicitud a tu aplicaci\xf3n pasa a trav\xe9s de una serie de puertas (filtros), donde cada puerta puede decidir si permitir que la solicitud contin\xfae hacia el siguiente filtro o a la aplicaci\xf3n en s\xed."]}),(0,n.jsx)(i.h4,{id:"proceso-de-una-solicitud-http",children:"Proceso de una Solicitud HTTP"}),(0,n.jsxs)(i.ol,{children:["\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.strong,{children:"El Cliente Env\xeda una Solicitud"}),": Cuando un cliente (como un navegador web) hace una solicitud a la aplicaci\xf3n, el servidor recibe esta solicitud."]}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.strong,{children:"Creaci\xf3n de la Cadena de Filtros"}),": El contenedor (container) de servlets, que es el entorno donde se ejecutan las aplicaciones Java web, crea una ",(0,n.jsx)(i.strong,{children:"Cadena de Filtros"})," (FilterChain). Esta cadena incluye instancias de filtros que deben procesar la solicitud. Estos filtros son seleccionados en funci\xf3n de la ruta de la solicitud URI (que es la direcci\xf3n de la solicitud en el servidor)."]}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.strong,{children:"Ejemplo de un Filtro en Spring MVC"}),": En una aplicaci\xf3n de Spring MVC, el filtro principal que maneja la solicitud es el ",(0,n.jsx)(i.strong,{children:"DispatcherServlet"}),". Este servlet (un tipo de componente que maneja las solicitudes) es responsable de dirigir las solicitudes a los controladores adecuados."]}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.strong,{children:"Manejo de Solicitudes"}),": En general, un filtro puede manejar una \xfanica solicitud y respuesta (HttpServletRequest y HttpServletResponse), pero puedes tener varios filtros que pueden:"]}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Prevenir que los filtros o el servlet de abajo se invoquen"}),": Por ejemplo, un filtro puede decidir no permitir que la solicitud contin\xfae a otros filtros o al servlet si detecta un problema (como falta de autenticaci\xf3n)."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Modificar la solicitud o respuesta"}),": Los filtros pueden alterar la HttpServletRequest (la representaci\xf3n de la solicitud) o HttpServletResponse (la representaci\xf3n de la respuesta) que se env\xedan a los filtros o al servlet siguiente."]}),"\n"]}),"\n"]}),"\n"]})]}),"\n",(0,n.jsxs)(s,{children:[(0,n.jsx)(i.h3,{id:"ejemplo-de-uso-de-filtros",children:"Ejemplo de Uso de Filtros"}),(0,n.jsx)(i.p,{children:"En el siguiente fragmento de c\xf3digo se ilustra c\xf3mo se puede implementar un filtro en Java:"}),(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-java",children:"public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) {\r\n    // Hacer algo antes de que el resto de la aplicaci\xf3n procese la solicitud\r\n    chain.doFilter(request, response); // Invocar el resto de la aplicaci\xf3n\r\n    // Hacer algo despu\xe9s de que el resto de la aplicaci\xf3n procese la solicitud\r\n}\n"})}),(0,n.jsxs)(s,{children:[(0,n.jsx)(i.h4,{id:"desglose-del-c\xf3digo",children:"Desglose del C\xf3digo"}),(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsxs)(i.strong,{children:["M\xe9todo ",(0,n.jsx)(i.code,{children:"doFilter"})]}),": Este es el m\xe9todo que se llama para cada solicitud que pasa a trav\xe9s del filtro."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:(0,n.jsx)(i.code,{children:"ServletRequest request"})}),": Representa la solicitud del cliente. Contiene informaci\xf3n sobre la solicitud, como par\xe1metros y cabeceras."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:(0,n.jsx)(i.code,{children:"ServletResponse response"})}),": Representa la respuesta que se enviar\xe1 al cliente. Permite modificar lo que se env\xeda de vuelta al cliente."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:(0,n.jsx)(i.code,{children:"FilterChain chain"})}),": Es la cadena de filtros a la que pertenece este filtro. Permite llamar al siguiente filtro en la cadena usando ",(0,n.jsx)(i.code,{children:"chain.doFilter(request, response)"}),"."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Acciones Pre y Post"}),": Puedes realizar acciones antes y despu\xe9s de invocar la cadena. Esto es \xfatil para agregar comportamiento adicional, como logging, gesti\xf3n de transacciones, etc."]}),"\n"]})]})]}),"\n",(0,n.jsxs)(s,{children:[(0,n.jsx)(i.h3,{id:"importancia-del-orden-de-los-filtros",children:"Importancia del Orden de los Filtros"}),(0,n.jsx)(i.p,{children:"La secuencia en la que se invocan los filtros es extremadamente importante. Debido a que cada filtro puede modificar la solicitud o la respuesta, el orden puede afectar c\xf3mo se procesa la solicitud final y qu\xe9 respuesta recibe el cliente. Por ejemplo, un filtro de autenticaci\xf3n debe ejecutarse antes de que se permita el acceso a los recursos de la aplicaci\xf3n."}),(0,n.jsx)(s,{color:"dark",header:"Figura 1. Cadena de filtros",textAlign:"center",children:(0,n.jsx)(i.p,{children:(0,n.jsx)(i.img,{src:"https://docs.spring.io/spring-security/reference/_images/servlet/architecture/filterchain.png",alt:"Spring seurity image"})})})]})]})}function u(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},8453:(e,i,s)=>{s.d(i,{R:()=>l,x:()=>t});var n=s(6540);const r={},a=n.createContext(r);function l(e){const i=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function t(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),n.createElement(a.Provider,{value:i},e.children)}}}]);