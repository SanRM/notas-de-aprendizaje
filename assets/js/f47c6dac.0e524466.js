"use strict";(self.webpackChunknotas_personales=self.webpackChunknotas_personales||[]).push([[965],{4383:(e,i,r)=>{r.r(i),r.d(i,{assets:()=>c,contentTitle:()=>t,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>l});var n=r(4848),a=r(8453);const s={title:"Filtros de seguridad",sidebar_position:5},t=void 0,o={id:"Lenguajes de programaci\xf3n/Java/Spring/Spring Security/Arquitectura/Filtros de seguridad",title:"Filtros de seguridad",description:"Los Security Filters son filtros que se a\xf1aden a la FilterChainProxy (una clase que maneja la cadena de filtros de seguridad en Spring) utilizando la API SecurityFilterChain. Estos filtros tienen diferentes responsabilidades relacionadas con la seguridad, como:",source:"@site/docs/Lenguajes de programaci\xf3n/Java/Spring/Spring Security/Arquitectura/Filtros de seguridad.md",sourceDirName:"Lenguajes de programaci\xf3n/Java/Spring/Spring Security/Arquitectura",slug:"/Lenguajes de programaci\xf3n/Java/Spring/Spring Security/Arquitectura/Filtros de seguridad",permalink:"/notas-de-aprendizaje/docs/Lenguajes de programaci\xf3n/Java/Spring/Spring Security/Arquitectura/Filtros de seguridad",draft:!1,unlisted:!1,editUrl:"https://github.com/SanRM/notas-de-aprendizaje/edit/main/docs/Lenguajes de programaci\xf3n/Java/Spring/Spring Security/Arquitectura/Filtros de seguridad.md",tags:[],version:"current",lastUpdatedBy:"SanRM",lastUpdatedAt:1728966437e3,sidebarPosition:5,frontMatter:{title:"Filtros de seguridad",sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"SecurityFilterChain",permalink:"/notas-de-aprendizaje/docs/Lenguajes de programaci\xf3n/Java/Spring/Spring Security/Arquitectura/SecurityFilterChain"},next:{title:"Imprimiendo los filtros de seguridad",permalink:"/notas-de-aprendizaje/docs/Lenguajes de programaci\xf3n/Java/Spring/Spring Security/Arquitectura/Imprimir los filtros de seguridad"}},c={},l=[{value:"Orden de Ejecuci\xf3n de los Filtros",id:"orden-de-ejecuci\xf3n-de-los-filtros",level:3},{value:"Ejemplo de Configuraci\xf3n de Seguridad",id:"ejemplo-de-configuraci\xf3n-de-seguridad",level:3},{value:"Orden de los Filtros en la Configuraci\xf3n",id:"orden-de-los-filtros-en-la-configuraci\xf3n",level:3},{value:"Explicaci\xf3n del Proceso de los Filtros",id:"explicaci\xf3n-del-proceso-de-los-filtros",level:3}];function d(e){const i={admonition:"admonition",code:"code",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components},{Card:r}=i;return r||function(e,i){throw new Error("Expected "+(i?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Card",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(i.p,{children:["Los ",(0,n.jsx)(i.strong,{children:"Security Filters"})," son filtros que se a\xf1aden a la ",(0,n.jsx)(i.strong,{children:"FilterChainProxy"})," (una clase que maneja la cadena de filtros de seguridad en Spring) utilizando la API ",(0,n.jsx)(i.strong,{children:"SecurityFilterChain"}),". Estos filtros tienen diferentes responsabilidades relacionadas con la seguridad, como:"]}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Autenticaci\xf3n"}),": Verificar la identidad de un usuario."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Autorizaci\xf3n"}),": Verificar si un usuario tiene los permisos adecuados para realizar una acci\xf3n."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Protecci\xf3n contra exploits"}),": Evitar ataques comunes, como CSRF (Cross-Site Request Forgery), que intentan enga\xf1ar al usuario para realizar acciones no deseadas."]}),"\n"]}),"\n",(0,n.jsxs)(r,{children:[(0,n.jsx)(i.h3,{id:"orden-de-ejecuci\xf3n-de-los-filtros",children:"Orden de Ejecuci\xf3n de los Filtros"}),(0,n.jsxs)(i.p,{children:["Los filtros de seguridad se ejecutan en un ",(0,n.jsx)(i.strong,{children:"orden espec\xedfico"})," dentro de la cadena de filtros para garantizar que cada filtro sea invocado en el momento correcto. Por ejemplo, el filtro que maneja la autenticaci\xf3n (confirmar la identidad del usuario) debe ejecutarse ",(0,n.jsx)(i.strong,{children:"antes"})," del filtro que maneja la autorizaci\xf3n (verificar si el usuario tiene los permisos para realizar ciertas acciones). Aunque normalmente no necesitas preocuparte por el orden exacto de los filtros de Spring Security, a veces es \xfatil conocerlo. Para saber m\xe1s sobre el orden, puedes consultar el c\xf3digo de ",(0,n.jsx)(i.code,{children:"FilterOrderRegistration"}),"."]})]}),"\n",(0,n.jsxs)(r,{children:[(0,n.jsx)(i.h3,{id:"ejemplo-de-configuraci\xf3n-de-seguridad",children:"Ejemplo de Configuraci\xf3n de Seguridad"}),(0,n.jsx)(i.p,{children:"Veamos un ejemplo de configuraci\xf3n de seguridad en Spring para ilustrar c\xf3mo se a\xf1aden estos filtros y cu\xe1l es su orden de ejecuci\xf3n:"}),(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-java",children:"@Configuration\r\n@EnableWebSecurity\r\npublic class SecurityConfig {\r\n\r\n    @Bean\r\n    public SecurityFilterChain filterChain(HttpSecurity http) throws Exception {\r\n        http\r\n            .csrf(Customizer.withDefaults()) //1. Protecci\xf3n contra CSRF\r\n            .authorizeHttpRequests(authorize -> authorize\r\n                .anyRequest().authenticated() //4. Cualquier solicitud debe estar autenticada\r\n            )\r\n            .httpBasic(Customizer.withDefaults()) //3. Autenticaci\xf3n b\xe1sica HTTP\r\n            .formLogin(Customizer.withDefaults()); //2. Login mediante formulario\r\n        return http.build();\r\n    }\r\n}\n"})})]}),"\n",(0,n.jsxs)(r,{children:[(0,n.jsx)(i.h3,{id:"orden-de-los-filtros-en-la-configuraci\xf3n",children:"Orden de los Filtros en la Configuraci\xf3n"}),(0,n.jsx)(i.p,{children:"En la configuraci\xf3n anterior, los filtros se a\xf1aden en un orden espec\xedfico. A continuaci\xf3n, explico cada filtro y c\xf3mo se agrega:"}),(0,n.jsxs)(i.ol,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"CsrfFilter"}),": Este filtro es agregado por la configuraci\xf3n ",(0,n.jsx)(i.code,{children:"http.csrf()"}),". Su objetivo es proteger contra ataques CSRF. Se ejecuta primero, ya que es importante proteger las solicitudes antes de cualquier otra l\xf3gica de autenticaci\xf3n o autorizaci\xf3n."]}),"\n"]}),(0,n.jsx)(i.admonition,{type:"info",children:(0,n.jsx)(i.p,{children:"El CSRF (Cross-Site Request Forgery, en espa\xf1ol Falsificaci\xf3n de Petici\xf3n en Sitios Cruzados) es un tipo de ataque en aplicaciones web que explota la confianza que una aplicaci\xf3n tiene en la identidad del usuario. En este ataque, un atacante enga\xf1a al usuario autenticado para que realice acciones no deseadas en un sitio web en el que el usuario tiene privilegios."})}),(0,n.jsxs)(i.ol,{start:"2",children:["\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.strong,{children:"UsernamePasswordAuthenticationFilter"}),": Este filtro se a\xf1ade por la configuraci\xf3n ",(0,n.jsx)(i.code,{children:"http.formLogin()"}),". Se utiliza para manejar la autenticaci\xf3n mediante formularios (cuando un usuario ingresa su nombre de usuario y contrase\xf1a). Se ejecuta ",(0,n.jsx)(i.strong,{children:"despu\xe9s"})," del ",(0,n.jsx)(i.code,{children:"CsrfFilter"})," para autenticar la solicitud."]}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.strong,{children:"BasicAuthenticationFilter"}),": Este filtro se a\xf1ade por la configuraci\xf3n ",(0,n.jsx)(i.code,{children:"http.httpBasic()"}),". Maneja la autenticaci\xf3n b\xe1sica HTTP, donde las credenciales se pasan en las cabeceras de la solicitud. Se ejecuta despu\xe9s del ",(0,n.jsx)(i.code,{children:"UsernamePasswordAuthenticationFilter"}),"."]}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.strong,{children:"AuthorizationFilter"}),": Este filtro se a\xf1ade por la configuraci\xf3n ",(0,n.jsx)(i.code,{children:"http.authorizeHttpRequests()"}),". Una vez que la solicitud ha sido autenticada, este filtro se encarga de verificar si el usuario tiene permisos para realizar la acci\xf3n solicitada. Se ejecuta ",(0,n.jsx)(i.strong,{children:"despu\xe9s"})," de los filtros de autenticaci\xf3n."]}),"\n"]}),"\n"]}),(0,n.jsx)(i.h3,{id:"explicaci\xf3n-del-proceso-de-los-filtros",children:"Explicaci\xf3n del Proceso de los Filtros"}),(0,n.jsx)(i.p,{children:"Siguiendo el orden descrito, aqu\xed tienes una visi\xf3n general de c\xf3mo se invocan los filtros:"}),(0,n.jsxs)(i.ol,{children:["\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.strong,{children:"Protecci\xf3n contra CSRF"}),": Primero se ejecuta el ",(0,n.jsx)(i.code,{children:"CsrfFilter"}),", que protege contra ataques de tipo CSRF. Este filtro verifica si las solicitudes POST, PUT, DELETE, etc., contienen un token CSRF v\xe1lido, lo cual evita que los atacantes realicen acciones maliciosas en nombre del usuario."]}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.strong,{children:"Autenticaci\xf3n"}),": Luego se ejecutan los filtros de autenticaci\xf3n, como el ",(0,n.jsx)(i.code,{children:"UsernamePasswordAuthenticationFilter"})," o el ",(0,n.jsx)(i.code,{children:"BasicAuthenticationFilter"}),". Estos filtros verifican la identidad del usuario. Por ejemplo, si un usuario env\xeda sus credenciales (nombre de usuario y contrase\xf1a), estos filtros las validan."]}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.strong,{children:"Autorizaci\xf3n"}),": Finalmente, se ejecuta el ",(0,n.jsx)(i.code,{children:"AuthorizationFilter"}),". Este filtro verifica si el usuario autenticado tiene permiso para acceder al recurso o realizar la acci\xf3n solicitada. Si el usuario no tiene los permisos adecuados, la solicitud ser\xe1 rechazada."]}),"\n"]}),"\n"]}),(0,n.jsx)(i.admonition,{type:"info",children:(0,n.jsx)(i.p,{children:"Es posible que haya otros filtros que no se mencionan espec\xedficamente en esta configuraci\xf3n. Si deseas ver la lista completa de filtros que se invocan para una solicitud particular, puedes imprimirlos en los logs. Esto es \xfatil para depurar y entender mejor el comportamiento de seguridad en tu aplicaci\xf3n."})})]})]})}function u(e={}){const{wrapper:i}={...(0,a.R)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},8453:(e,i,r)=>{r.d(i,{R:()=>t,x:()=>o});var n=r(6540);const a={},s=n.createContext(a);function t(e){const i=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:t(e.components),n.createElement(s.Provider,{value:i},e.children)}}}]);