"use strict";(self.webpackChunknotas_personales=self.webpackChunknotas_personales||[]).push([[6203],{2431:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>t});var a=n(4848),o=n(8453);const s={sidebar_position:5},l=void 0,i={id:"Frameworks/Angular/Control de flujo @for",title:"Control de flujo @for",description:"Control de Flujo en Componentes: Uso de @for en Angular",source:"@site/docs/Frameworks/Angular/Control de flujo @for.md",sourceDirName:"Frameworks/Angular",slug:"/Frameworks/Angular/Control de flujo @for",permalink:"/notas-de-aprendizaje/docs/Frameworks/Angular/Control de flujo @for",draft:!1,unlisted:!1,editUrl:"https://github.com/SanRM/notas-de-aprendizaje/edit/main/docs/Frameworks/Angular/Control de flujo @for.md",tags:[],version:"current",lastUpdatedBy:"SanRM",lastUpdatedAt:1730660085e3,sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Control de flujo @if",permalink:"/notas-de-aprendizaje/docs/Frameworks/Angular/Control de flujo @if"},next:{title:"Enlace de propiedades",permalink:"/notas-de-aprendizaje/docs/Frameworks/Angular/Enlace de propiedades"}},d={},t=[{value:"Control de Flujo en Componentes: Uso de <code>@for</code> en Angular",id:"control-de-flujo-en-componentes-uso-de-for-en-angular",level:3},{value:"Ejemplo de Uso de <code>@for</code>",id:"ejemplo-de-uso-de-for",level:4},{value:"Agregar la Propiedad <code>users</code>",id:"agregar-la-propiedad-users",level:4},{value:"Actualizar la Plantilla para Mostrar los Nombres de los Usuarios",id:"actualizar-la-plantilla-para-mostrar-los-nombres-de-los-usuarios",level:4}];function c(e){const r={code:"code",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components},{Card:n}=r;return n||function(e,r){throw new Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Card",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(r.h3,{id:"control-de-flujo-en-componentes-uso-de-for-en-angular",children:["Control de Flujo en Componentes: Uso de ",(0,a.jsx)(r.code,{children:"@for"})," en Angular"]}),"\n",(0,a.jsxs)(r.p,{children:["Cuando construimos aplicaciones web, a menudo necesitamos repetir bloques de c\xf3digo un n\xfamero espec\xedfico de veces. Por ejemplo, si tenemos un arreglo de nombres, puede que queramos mostrar cada nombre dentro de un elemento ",(0,a.jsx)(r.code,{children:"<p>"}),". Para facilitar esta tarea, Angular proporciona una sintaxis especial llamada ",(0,a.jsx)(r.code,{children:"@for"}),", que permite iterar sobre elementos en una plantilla."]}),"\n",(0,a.jsxs)(n,{children:[(0,a.jsxs)(r.h4,{id:"ejemplo-de-uso-de-for",children:["Ejemplo de Uso de ",(0,a.jsx)(r.code,{children:"@for"})]}),(0,a.jsxs)(r.p,{children:["Para ilustrar c\xf3mo usar la sintaxis ",(0,a.jsx)(r.code,{children:"@for"}),", veamos un ejemplo simple donde iteramos sobre una lista de sistemas operativos."]}),(0,a.jsx)(n,{children:(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-typescript",children:"@Component({\r\n    ...\r\n  template: `\r\n    @for (os of operatingSystems; track os.id) {\r\n      {{ os.name }}\r\n    }\r\n  `,\r\n})\r\nexport class AppComponent {\r\n    operatingSystems = [\r\n        { id: 'win', name: 'Windows' },\r\n        { id: 'osx', name: 'MacOS' },\r\n        { id: 'linux', name: 'Linux' }\r\n    ];\r\n}\n"})})}),(0,a.jsx)(r.p,{children:"En este caso:"}),(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsxs)(r.li,{children:["La variable ",(0,a.jsx)(r.code,{children:"os"})," representa cada elemento del arreglo ",(0,a.jsx)(r.code,{children:"operatingSystems"}),"."]}),"\n",(0,a.jsxs)(r.li,{children:["Usamos ",(0,a.jsx)(r.code,{children:"track os.id"})," para seguir el identificador \xfanico de cada sistema operativo, lo que ayuda a Angular a optimizar la representaci\xf3n de la lista y a manejar los cambios de manera m\xe1s eficiente."]}),"\n",(0,a.jsxs)(r.li,{children:["La interpolaci\xf3n ",(0,a.jsx)(r.code,{children:"{{ os.name }}"})," muestra el nombre de cada sistema operativo en la interfaz de usuario."]}),"\n"]}),(0,a.jsxs)(r.p,{children:["Es importante notar que el s\xedmbolo ",(0,a.jsx)(r.code,{children:"@"})," delante de ",(0,a.jsx)(r.code,{children:"for"})," indica que estamos utilizando una sintaxis especial de Angular para plantillas."]})]}),"\n",(0,a.jsxs)(n,{children:[(0,a.jsxs)(r.h4,{id:"agregar-la-propiedad-users",children:["Agregar la Propiedad ",(0,a.jsx)(r.code,{children:"users"})]}),(0,a.jsxs)(r.p,{children:["Ahora, a\xf1adamos una nueva propiedad llamada ",(0,a.jsx)(r.code,{children:"users"})," a la clase ",(0,a.jsx)(r.code,{children:"AppComponent"}),", que contendr\xe1 un arreglo de usuarios y sus nombres:"]}),(0,a.jsx)(n,{children:(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-typescript",children:"export class AppComponent {\r\n    users = [\r\n        { id: 0, name: 'Sarah' },\r\n        { id: 1, name: 'Amy' },\r\n        { id: 2, name: 'Rachel' },\r\n        { id: 3, name: 'Jessica' },\r\n        { id: 4, name: 'Poornima' }\r\n    ];\r\n}\n"})})})]}),"\n",(0,a.jsxs)(n,{children:[(0,a.jsx)(r.h4,{id:"actualizar-la-plantilla-para-mostrar-los-nombres-de-los-usuarios",children:"Actualizar la Plantilla para Mostrar los Nombres de los Usuarios"}),(0,a.jsxs)(r.p,{children:["Luego, actualizaremos la plantilla para mostrar el nombre de cada usuario dentro de un elemento ",(0,a.jsx)(r.code,{children:"<p>"})," utilizando la sintaxis ",(0,a.jsx)(r.code,{children:"@for"}),":"]}),(0,a.jsx)(n,{children:(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-typescript",children:"template: `\r\n  @for (user of users; track user.id) {\r\n    <p>{{ user.name }}</p>\r\n  }\r\n`\n"})})}),(0,a.jsx)(r.p,{children:"En esta parte de la plantilla:"}),(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsxs)(r.li,{children:["\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.code,{children:"user"})," es la variable que representa cada objeto de usuario en el arreglo ",(0,a.jsx)(r.code,{children:"users"}),"."]}),"\n"]}),"\n",(0,a.jsxs)(r.li,{children:["\n",(0,a.jsxs)(r.p,{children:["Usamos ",(0,a.jsx)(r.code,{children:"track user.id"})," para identificar de manera \xfanica a cada usuario, lo que es esencial para mantener la eficiencia en la actualizaci\xf3n de la vista."]}),"\n"]}),"\n",(0,a.jsxs)(r.li,{children:["\n",(0,a.jsxs)(r.p,{children:["La interpolaci\xf3n ",(0,a.jsx)(r.code,{children:"{{ user.name }}"})," se utiliza para mostrar el nombre de cada usuario."]}),"\n"]}),"\n"]})]}),"\n",(0,a.jsxs)(r.p,{children:["El uso de ",(0,a.jsx)(r.code,{children:"@for"})," en Angular nos permite implementar ",(0,a.jsx)(r.strong,{children:"control de flujo"})," en nuestras plantillas de manera sencilla y eficiente. Al iterar sobre arreglos de datos, podemos generar din\xe1micamente contenido en la interfaz de usuario, haciendo que nuestras aplicaciones sean m\xe1s interactivas y f\xe1ciles de mantener. Este tipo de funcionalidad es fundamental para construir aplicaciones web modernas y reactivas. \xa1Sigue as\xed, lo est\xe1s haciendo muy bien! \ud83c\udf89"]})]})}function u(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,a.jsx)(r,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>l,x:()=>i});var a=n(6540);const o={},s=a.createContext(o);function l(e){const r=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),a.createElement(s.Provider,{value:r},e.children)}}}]);