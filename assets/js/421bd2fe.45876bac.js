"use strict";(self.webpackChunknotas_personales=self.webpackChunknotas_personales||[]).push([[7237],{862:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var s=n(4848),r=n(8453);const o={title:"Introducci\xf3n a los patrones de dise\xf1o",sidebar_position:1},i=void 0,a={id:"Patrones de dise\xf1o/Introducci\xf3n a patrones de dise\xf1o",title:"Introducci\xf3n a los patrones de dise\xf1o",description:"Definici\xf3n",source:"@site/docs/Patrones de dise\xf1o/Introducci\xf3n a patrones de dise\xf1o.md",sourceDirName:"Patrones de dise\xf1o",slug:"/Patrones de dise\xf1o/Introducci\xf3n a patrones de dise\xf1o",permalink:"/notas-de-aprendizaje/docs/Patrones de dise\xf1o/Introducci\xf3n a patrones de dise\xf1o",draft:!1,unlisted:!1,editUrl:"https://github.com/SanRM/notas-de-aprendizaje/edit/main/docs/Patrones de dise\xf1o/Introducci\xf3n a patrones de dise\xf1o.md",tags:[],version:"current",lastUpdatedBy:"SanRM",lastUpdatedAt:1722011095e3,sidebarPosition:1,frontMatter:{title:"Introducci\xf3n a los patrones de dise\xf1o",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Patrones de dise\xf1o",permalink:"/notas-de-aprendizaje/docs/category/patrones-de-dise\xf1o"},next:{title:"Principios SOLID",permalink:"/notas-de-aprendizaje/docs/Patrones de dise\xf1o/Arquitect\xf3nicos/Clean code/SOLID"}},d={},l=[{value:"Definici\xf3n",id:"definici\xf3n",level:2},{value:"M\xe1s informaci\xf3n",id:"m\xe1s-informaci\xf3n",level:2},{value:"Categor\xedas principales de los patrones de dise\xf1o",id:"categor\xedas-principales-de-los-patrones-de-dise\xf1o",level:2}];function c(e){const t={a:"a",h2:"h2",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components},{Card:n}=t;return n||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Card",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"definici\xf3n",children:"Definici\xf3n"}),"\n",(0,s.jsx)(t.p,{children:"Los patrones de dise\xf1o son una herramienta que nos permite reutilizar soluciones a problemas comunes, de esta forma se evita tener que reinventar la rueda cada vez que se presenta un problema."}),"\n",(0,s.jsx)(t.p,{children:"Son una gu\xeda para el dise\xf1o de software, nos permiten dise\xf1ar software de forma m\xe1s eficiente y con mayor calidad."}),"\n",(0,s.jsx)(t.h2,{id:"m\xe1s-informaci\xf3n",children:"M\xe1s informaci\xf3n"}),"\n",(0,s.jsx)(t.p,{children:"Se puede encontrar m\xe1s informaci\xf3n sobre los patrones de dise\xf1o en:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"https://refactoring.guru/es",children:"Refactoring Guru"})}),"\n"]}),"\n",(0,s.jsxs)(n,{color:"blue",children:[(0,s.jsx)(t.h2,{id:"categor\xedas-principales-de-los-patrones-de-dise\xf1o",children:"Categor\xedas principales de los patrones de dise\xf1o"}),(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Los patrones de dise\xf1o se agrupan en diferentes categor\xedas seg\xfan el prop\xf3sito y el \xe1rea de aplicaci\xf3n en el dise\xf1o de software, estas categor\xedas proporcionan un marco conceptual que ayuda a entender c\xf3mo se utilizan los patrones y cu\xe1l es su funci\xf3n en el desarrollo de sistemas de software."}),"\n"]})]}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Categor\xeda"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Prop\xf3sito"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Caracter\xedsticas"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Ejemplos"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.strong,{children:"Creacionales"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Crear objetos de manera flexible y reutilizable"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Proporcionan mecanismos para la creaci\xf3n de objetos de forma din\xe1mica, sin acoplar el c\xf3digo a las clases concretas."}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Singleton, Factory Method, Abstract Factory, Builder, Prototype"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.strong,{children:"Estructurales"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Se ocupan de la composici\xf3n de clases y objetos para formar estructuras m\xe1s grandes y complejas."}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Se centran en c\xf3mo se organizan y relacionan las clases y objetos para lograr una mayor flexibilidad y reutilizaci\xf3n del c\xf3digo."}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Adapter, Composite, Proxy, Facade, Decorator, Data Access Object (DAO), Data Transfer Object (DTO)."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.strong,{children:"Comportamiento"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Se centran en la comunicaci\xf3n y la asignaci\xf3n de responsabilidades entre objetos."}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Estos patrones definen c\xf3mo los objetos interact\xfaan entre s\xed y c\xf3mo distribuyen las tareas y responsabilidades en un sistema de software."}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Strategy, Observer, Command, Mediator, Memento, State, Template Method, Visitor."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.strong,{children:"Arquitect\xf3nicos"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Se ocupan de la estructura general de un sistema de software."}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Estos patrones definen la estructura general de un sistema de software y proporcionan un marco de trabajo para organizar y coordinar los componentes de un sistema."}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Model-View-Controller (MVC), Model-View-Presenter (MVP), Model-View-ViewModel (MVVM), Layered Architecture, Microservices, Event-Driven Architecture, Hexagonal Architecture, Clean Architecture."})]})]})]})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>a});var s=n(6540);const r={},o=s.createContext(r);function i(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);