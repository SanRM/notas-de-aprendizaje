"use strict";(self.webpackChunknotas_personales=self.webpackChunknotas_personales||[]).push([[3778],{3067:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>t,contentTitle:()=>o,default:()=>p,frontMatter:()=>s,metadata:()=>d,toc:()=>l});var n=r(4848),i=r(8453);const s={title:"Configuraci\xf3n de JPA"},o=void 0,d={id:"Lenguajes de programaci\xf3n/Java/Spring Boot/JPA/Configuraci\xf3n de JPA",title:"Configuraci\xf3n de JPA",description:"JPA (Java Persistence API) es una especificaci\xf3n de Java para el mapeo de datos a objetos en una base de datos relacional. Hibernate es una implementaci\xf3n popular de JPA.",source:"@site/docs/Lenguajes de programaci\xf3n/Java/Spring Boot/JPA/Configuraci\xf3n de JPA.md",sourceDirName:"Lenguajes de programaci\xf3n/Java/Spring Boot/JPA",slug:"/Lenguajes de programaci\xf3n/Java/Spring Boot/JPA/Configuraci\xf3n de JPA",permalink:"/notas-de-aprendizaje/docs/Lenguajes de programaci\xf3n/Java/Spring Boot/JPA/Configuraci\xf3n de JPA",draft:!1,unlisted:!1,editUrl:"https://github.com/SanRM/notas-de-aprendizaje/edit/main/docs/Lenguajes de programaci\xf3n/Java/Spring Boot/JPA/Configuraci\xf3n de JPA.md",tags:[],version:"current",lastUpdatedBy:"SanRM",lastUpdatedAt:1722011095e3,frontMatter:{title:"Configuraci\xf3n de JPA"},sidebar:"tutorialSidebar",previous:{title:"JPA",permalink:"/notas-de-aprendizaje/docs/Lenguajes de programaci\xf3n/Java/Spring Boot/JPA/"},next:{title:"Mapeo de entidades",permalink:"/notas-de-aprendizaje/docs/Lenguajes de programaci\xf3n/Java/Spring Boot/JPA/Mapeo de entidades"}},t={},l=[{value:"Configuraci\xf3n de Conexi\xf3n a la Base de Datos",id:"configuraci\xf3n-de-conexi\xf3n-a-la-base-de-datos",level:2},{value:"Propiedad <strong>spring.jpa.hibernate.ddl-auto</strong>",id:"propiedad-springjpahibernateddl-auto",level:2},{value:"Propiedad <strong>spring.jpa.show-sql</strong>",id:"propiedad-springjpashow-sql",level:2},{value:"Propiedad <strong>spring.jpa.properties.hibernate.format_sql</strong>",id:"propiedad-springjpapropertieshibernateformat_sql",level:2},{value:"Propiedad <strong>spring.jpa.properties.hibernate.dialect</strong>",id:"propiedad-springjpapropertieshibernatedialect",level:2},{value:"Propiedad <strong>spring.output.ansi.enabled</strong>",id:"propiedad-springoutputansienabled",level:2}];function c(e){const a={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components},{Card:r}=a;return r||function(e,a){throw new Error("Expected "+(a?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Card",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.p,{children:"JPA (Java Persistence API) es una especificaci\xf3n de Java para el mapeo de datos a objetos en una base de datos relacional. Hibernate es una implementaci\xf3n popular de JPA."}),"\n",(0,n.jsx)(a.p,{children:"En Spring Boot, configurar JPA y Hibernate es relativamente sencillo gracias a las propiedades de configuraci\xf3n y al soporte integrado que ofrece Spring Data JPA."}),"\n",(0,n.jsxs)(r,{children:[(0,n.jsx)(a.h2,{id:"configuraci\xf3n-de-conexi\xf3n-a-la-base-de-datos",children:"Configuraci\xf3n de Conexi\xf3n a la Base de Datos"}),(0,n.jsxs)(a.p,{children:["Para configurar la conexi\xf3n a la base de datos, se deben definir las propiedades de conexi\xf3n en el archivo ",(0,n.jsx)(a.strong,{children:"application.properties"})," o ",(0,n.jsx)(a.strong,{children:"application.yml"}),"."]}),(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-java",metastring:"title='Ejemplo en application.properties'",children:"spring.datasource.url=jdbc:mysql://localhost:3306/mi_base_de_datos\r\nspring.datasource.username=usuario\r\nspring.datasource.password=contrase\xf1a\r\nspring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver\n"})}),(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-java",metastring:"title='Ejemplo en application.yml'",children:"spring:\r\n  datasource:\r\n    url: jdbc:mysql://localhost:3306/mi_base_de_datos\r\n    username: usuario\r\n    password: contrase\xf1a\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\n"})})]}),"\n",(0,n.jsxs)(r,{color:"red",children:[(0,n.jsxs)(a.h2,{id:"propiedad-springjpahibernateddl-auto",children:["Propiedad ",(0,n.jsx)(a.strong,{children:"spring.jpa.hibernate.ddl-auto"})]}),(0,n.jsx)(a.p,{children:"La propiedad spring.jpa.hibernate.ddl-auto controla c\xf3mo Hibernate maneja el esquema de la base de datos, los valores posibles son:"}),(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.strong,{children:"none:"})," Hibernate no har\xe1 nada con el esquema de la base de datos."]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.strong,{children:"validate:"})," Hibernate solo validar\xe1 que el esquema de la base de datos existente coincide con las entidades mapeadas, pero no realizar\xe1 ninguna modificaci\xf3n."]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.strong,{children:"update:"})," Hibernate actualizar\xe1 el esquema de la base de datos para que coincida con las entidades mapeadas sin eliminar datos existentes."]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.strong,{children:"create:"})," Hibernate crear\xe1 el esquema de la base de datos cada vez que se inicia la aplicaci\xf3n, eliminando todos los datos existentes."]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.strong,{children:"create-drop:"})," Hibernate crear\xe1 el esquema de la base de datos al inicio de la aplicaci\xf3n y lo eliminar\xe1 al finalizar la misma. Esta configuraci\xf3n es \xfatil durante el desarrollo y pruebas porque permite tener un esquema limpio y actualizado, lo que facilita la detecci\xf3n de errores y problemas de mapeo pero no se recomienda para producci\xf3n porque elimina todos los datos existentes en la base de datos cada vez que se detiene la aplicaci\xf3n."]}),"\n"]})]}),"\n",(0,n.jsxs)(r,{color:"yellow",children:[(0,n.jsxs)(a.h2,{id:"propiedad-springjpashow-sql",children:["Propiedad ",(0,n.jsx)(a.strong,{children:"spring.jpa.show-sql"})]}),(0,n.jsxs)(a.p,{children:["La propiedad spring.jpa.show-sql se utiliza para mostrar las consultas SQL generadas por Hibernate en la consola, sus valores posibles son ",(0,n.jsx)(a.strong,{children:"true"})," o ",(0,n.jsx)(a.strong,{children:"false"}),"."]})]}),"\n",(0,n.jsxs)(r,{color:"yellow",children:[(0,n.jsxs)(a.h2,{id:"propiedad-springjpapropertieshibernateformat_sql",children:["Propiedad ",(0,n.jsx)(a.strong,{children:"spring.jpa.properties.hibernate.format_sql"})]}),(0,n.jsxs)(a.p,{children:["La propiedad spring.jpa.properties.hibernate.format_sql se utiliza para formatear las consultas SQL generadas por Hibernate en la consola y tener mejor legibilidad, sus valores posibles son ",(0,n.jsx)(a.strong,{children:"true"})," o ",(0,n.jsx)(a.strong,{children:"false"}),"."]})]}),"\n",(0,n.jsxs)(r,{color:"orange",children:[(0,n.jsxs)(a.h2,{id:"propiedad-springjpapropertieshibernatedialect",children:["Propiedad ",(0,n.jsx)(a.strong,{children:"spring.jpa.properties.hibernate.dialect"})]}),(0,n.jsx)(a.p,{children:"La propiedad spring.jpa.properties.hibernate.dialect se utiliza para definir el dialecto de la base de datos, algunos valores comunes son:"}),(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.strong,{children:"org.hibernate.dialect.MySQL5Dialect:"})," Para MySQL 5."]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.strong,{children:"org.hibernate.dialect.MySQL8Dialect:"})," Para MySQL 8."]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.strong,{children:"org.hibernate.dialect.H2Dialect:"})," Para H2."]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.strong,{children:"org.hibernate.dialect.PostgreSQLDialect:"})," Para PostgreSQL."]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.strong,{children:"org.hibernate.dialect.SQLServerDialect:"})," Para SQL Server."]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.strong,{children:"org.hibernate.dialect.Oracle12cDialect:"})," Para Oracle 12c."]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.strong,{children:"org.hibernate.dialect.Oracle10gDialect:"})," Para Oracle 10g."]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.strong,{children:"org.hibernate.dialect.Oracle9iDialect:"})," Para Oracle 9i."]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.strong,{children:"org.hibernate.dialect.Oracle8iDialect:"})," Para Oracle 8i."]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.strong,{children:"org.hibernate.dialect.DB2Dialect:"})," Para DB2."]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.strong,{children:"org.hibernate.dialect.HSQLDialect:"})," Para HSQLDB."]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.strong,{children:"org.hibernate.dialect.SQLiteDialect:"})," Para SQLite."]}),"\n"]})]}),"\n",(0,n.jsxs)(r,{color:"yellow",children:[(0,n.jsxs)(a.h2,{id:"propiedad-springoutputansienabled",children:["Propiedad ",(0,n.jsx)(a.strong,{children:"spring.output.ansi.enabled"})]}),(0,n.jsxs)(a.p,{children:["La propiedad spring.output.ansi.enabled se utiliza para habilitar o deshabilitar la salida ANSI en la consola, sus valores posibles son ",(0,n.jsx)(a.strong,{children:"always"}),", ",(0,n.jsx)(a.strong,{children:"detect"})," o ",(0,n.jsx)(a.strong,{children:"never"}),", esta propiedad a\xf1ade color a la salida de la consola."]})]})]})}function p(e={}){const{wrapper:a}={...(0,i.R)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},8453:(e,a,r)=>{r.d(a,{R:()=>o,x:()=>d});var n=r(6540);const i={},s=n.createContext(i);function o(e){const a=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function d(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),n.createElement(s.Provider,{value:a},e.children)}}}]);