"use strict";(self.webpackChunknotas_personales=self.webpackChunknotas_personales||[]).push([[4739],{6304:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>i,contentTitle:()=>t,default:()=>u,frontMatter:()=>s,metadata:()=>l,toc:()=>d});var o=a(4848),r=a(8453);const s={sidebar_position:7},t=void 0,l={id:"Frameworks/Angular/Eventos",title:"Eventos",description:"Manejo de Eventos en Angular",source:"@site/docs/Frameworks/Angular/Eventos.md",sourceDirName:"Frameworks/Angular",slug:"/Frameworks/Angular/Eventos",permalink:"/notas-de-aprendizaje/docs/Frameworks/Angular/Eventos",draft:!1,unlisted:!1,editUrl:"https://github.com/SanRM/notas-de-aprendizaje/edit/main/docs/Frameworks/Angular/Eventos.md",tags:[],version:"current",lastUpdatedBy:"SanRM",lastUpdatedAt:1730660085e3,sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"Enlace de propiedades",permalink:"/notas-de-aprendizaje/docs/Frameworks/Angular/Enlace de propiedades"},next:{title:"Input",permalink:"/notas-de-aprendizaje/docs/Frameworks/Angular/Input"}},i={},d=[{value:"Manejo de Eventos en Angular",id:"manejo-de-eventos-en-angular",level:3},{value:"Paso 1: Agregar un Manejador de Eventos",id:"paso-1-agregar-un-manejador-de-eventos",level:4},{value:"Paso 2: Agregar un Manejador para el Evento onMouseOver",id:"paso-2-agregar-un-manejador-para-el-evento-onmouseover",level:4},{value:"Paso 3: Vincular el Evento en la Plantilla",id:"paso-3-vincular-el-evento-en-la-plantilla",level:4}];function c(e){const n={code:"code",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,r.R)(),...e.components},{Card:a}=n;return a||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Card",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h3,{id:"manejo-de-eventos-en-angular",children:"Manejo de Eventos en Angular"}),"\n",(0,o.jsx)(n.p,{children:"El manejo de eventos es una caracter\xedstica fundamental en el desarrollo de aplicaciones web interactivas. Permite a los desarrolladores responder a acciones del usuario, como clics en botones, env\xedos de formularios y m\xe1s. En Angular, el manejo de eventos se realiza de manera sencilla y eficiente, facilitando la creaci\xf3n de experiencias de usuario din\xe1micas."}),"\n",(0,o.jsxs)(a,{children:[(0,o.jsx)(n.h4,{id:"paso-1-agregar-un-manejador-de-eventos",children:"Paso 1: Agregar un Manejador de Eventos"}),(0,o.jsxs)(n.p,{children:["Para manejar eventos en Angular, se utiliza la sintaxis de par\xe9ntesis ",(0,o.jsx)(n.code,{children:"()"}),". Al vincular un evento a un elemento HTML, se debe envolver el evento deseado en par\xe9ntesis y asignar un manejador de eventos. Por ejemplo, consideremos el siguiente c\xf3digo que vincula un evento de clic a un bot\xf3n:"]}),(0,o.jsx)(a,{children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"@Component({\r\n    ...\r\n    template: `<button (click)=\"greet()\">Click me</button>`\r\n})\r\nclass AppComponent {\r\n    greet() {\r\n        console.log('Hello, there \ud83d\udc4b');\r\n    }\r\n}\n"})})}),(0,o.jsxs)(n.p,{children:["En este ejemplo, cada vez que se hace clic en el bot\xf3n, se ejecutar\xe1 la funci\xf3n ",(0,o.jsx)(n.code,{children:"greet()"}),', que imprimir\xe1 "Hello, there \ud83d\udc4b" en la consola. Es importante notar que la sintaxis de ',(0,o.jsx)(n.code,{children:"greet()"})," incluye par\xe9ntesis al final, indicando que se trata de una funci\xf3n."]})]}),"\n",(0,o.jsxs)(a,{children:[(0,o.jsx)(n.h4,{id:"paso-2-agregar-un-manejador-para-el-evento-onmouseover",children:"Paso 2: Agregar un Manejador para el Evento onMouseOver"}),(0,o.jsxs)(n.p,{children:["Ahora, agreguemos un nuevo manejador para el evento ",(0,o.jsx)(n.code,{children:"onMouseOver"})," en la clase ",(0,o.jsx)(n.code,{children:"AppComponent"}),". Usaremos el siguiente c\xf3digo como implementaci\xf3n:"]}),(0,o.jsx)(a,{children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"onMouseOver() {\r\n    this.message = 'Way to go \ud83d\ude80';\r\n}\n"})})}),(0,o.jsxs)(n.p,{children:["Este m\xe9todo actualizar\xe1 la propiedad ",(0,o.jsx)(n.code,{children:"message"}),' con el texto "Way to go \ud83d\ude80" cuando ocurra el evento de pasar el mouse sobre un elemento.']})]}),"\n",(0,o.jsxs)(a,{children:[(0,o.jsx)(n.h4,{id:"paso-3-vincular-el-evento-en-la-plantilla",children:"Paso 3: Vincular el Evento en la Plantilla"}),(0,o.jsxs)(n.p,{children:["A continuaci\xf3n, actualizaremos la plantilla en ",(0,o.jsx)(n.code,{children:"app.component.ts"})," para vincular el evento ",(0,o.jsx)(n.code,{children:"mouseover"})," a un elemento ",(0,o.jsx)(n.code,{children:"<section>"}),":"]}),(0,o.jsx)(a,{children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:'<section (mouseover)="onMouseOver()">\r\n    \x3c!-- Otros contenidos aqu\xed --\x3e\r\n</section>\n'})})}),(0,o.jsxs)(n.p,{children:["Con esta l\xednea de c\xf3digo, cada vez que el mouse pase sobre la secci\xf3n, se ejecutar\xe1 el m\xe9todo ",(0,o.jsx)(n.code,{children:"onMouseOver()"}),", y se actualizar\xe1 el mensaje en la propiedad ",(0,o.jsx)(n.code,{children:"message"}),"."]})]}),"\n",(0,o.jsx)(n.p,{children:"Con unos pocos pasos en el c\xf3digo, has creado tu primer manejador de eventos en Angular. El manejo de eventos te permite hacer que tu aplicaci\xf3n responda a las acciones del usuario de manera efectiva, mejorando la interactividad y la experiencia general. \xa1Sigue practicando y mejorando tus habilidades en Angular!"})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>t,x:()=>l});var o=a(6540);const r={},s=o.createContext(r);function t(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);