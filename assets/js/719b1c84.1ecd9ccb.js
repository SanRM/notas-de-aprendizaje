"use strict";(self.webpackChunknotas_personales=self.webpackChunknotas_personales||[]).push([[998],{2107:(e,a,i)=>{i.r(a),i.d(a,{assets:()=>o,contentTitle:()=>t,default:()=>d,frontMatter:()=>s,metadata:()=>c,toc:()=>u});var r=i(4848),n=i(8453);const s={title:"Guardar y reutilizar solicitudes",sidebar_position:9},t=void 0,c={id:"Lenguajes de programaci\xf3n/Java/Spring/Spring Security/Arquitectura/Guardar solicitudes",title:"Guardar y reutilizar solicitudes",description:"\xbfPor qu\xe9 Guardar una Solicitud?",source:"@site/docs/Lenguajes de programaci\xf3n/Java/Spring/Spring Security/Arquitectura/Guardar solicitudes.md",sourceDirName:"Lenguajes de programaci\xf3n/Java/Spring/Spring Security/Arquitectura",slug:"/Lenguajes de programaci\xf3n/Java/Spring/Spring Security/Arquitectura/Guardar solicitudes",permalink:"/notas-de-aprendizaje/docs/Lenguajes de programaci\xf3n/Java/Spring/Spring Security/Arquitectura/Guardar solicitudes",draft:!1,unlisted:!1,editUrl:"https://github.com/SanRM/notas-de-aprendizaje/edit/main/docs/Lenguajes de programaci\xf3n/Java/Spring/Spring Security/Arquitectura/Guardar solicitudes.md",tags:[],version:"current",lastUpdatedBy:"SanRM",lastUpdatedAt:1729228641e3,sidebarPosition:9,frontMatter:{title:"Guardar y reutilizar solicitudes",sidebar_position:9},sidebar:"tutorialSidebar",previous:{title:"ExceptionTranslationFilter",permalink:"/notas-de-aprendizaje/docs/Lenguajes de programaci\xf3n/Java/Spring/Spring Security/Arquitectura/ExceptionTranslationFilter"},next:{title:"Logging",permalink:"/notas-de-aprendizaje/docs/Lenguajes de programaci\xf3n/Java/Spring/Spring Security/Arquitectura/Logging"}},o={},u=[{value:"\xbfPor qu\xe9 Guardar una Solicitud?",id:"por-qu\xe9-guardar-una-solicitud",level:3},{value:"\xbfQu\xe9 es RequestCache?",id:"qu\xe9-es-requestcache",level:3},{value:"Proceso de Funcionamiento",id:"proceso-de-funcionamiento",level:4},{value:"Implementaci\xf3n por Defecto: HttpSessionRequestCache",id:"implementaci\xf3n-por-defecto-httpsessionrequestcache",level:3},{value:"Ejemplo de C\xf3digo para Personalizar RequestCache",id:"ejemplo-de-c\xf3digo-para-personalizar-requestcache",level:4},{value:"Desglose del C\xf3digo",id:"desglose-del-c\xf3digo",level:4},{value:"Evitar Guardar Solicitudes",id:"evitar-guardar-solicitudes",level:3},{value:"Ejemplo de C\xf3digo para No Guardar la Solicitud",id:"ejemplo-de-c\xf3digo-para-no-guardar-la-solicitud",level:4},{value:"Desglose del C\xf3digo",id:"desglose-del-c\xf3digo-1",level:4},{value:"RequestCacheAwareFilter",id:"requestcacheawarefilter",level:3}];function l(e){const a={code:"code",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,n.R)(),...e.components},{Card:i}=a;return i||function(e,a){throw new Error("Expected "+(a?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Card",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(a.h3,{id:"por-qu\xe9-guardar-una-solicitud",children:"\xbfPor qu\xe9 Guardar una Solicitud?"}),"\n",(0,r.jsx)(a.p,{children:'Cuando un usuario intenta acceder a un recurso que requiere autenticaci\xf3n, pero a\xfan no est\xe1 autenticado, la solicitud original debe "guardarse". \xbfPor qu\xe9? Porque despu\xe9s de que el usuario se autentique (por ejemplo, iniciando sesi\xf3n), queremos redirigirlo a la p\xe1gina que originalmente intent\xf3 acceder, en lugar de simplemente enviarlo a la p\xe1gina de inicio o a otra p\xe1gina gen\xe9rica.'}),"\n",(0,r.jsxs)(a.p,{children:["En ",(0,r.jsx)(a.strong,{children:"Spring Security"}),", esta funcionalidad se implementa utilizando algo llamado ",(0,r.jsx)(a.strong,{children:"RequestCache"}),"."]}),"\n",(0,r.jsxs)(i,{children:[(0,r.jsx)(a.h3,{id:"qu\xe9-es-requestcache",children:"\xbfQu\xe9 es RequestCache?"}),(0,r.jsxs)(a.p,{children:["El ",(0,r.jsx)(a.strong,{children:"RequestCache"})," es una clase que se encarga de guardar la solicitud HTTP (HttpServletRequest) original del usuario no autenticado, para que pueda ser reproducida una vez que el usuario se autentica correctamente."]})]}),"\n",(0,r.jsxs)(i,{children:[(0,r.jsx)(a.h4,{id:"proceso-de-funcionamiento",children:"Proceso de Funcionamiento"}),(0,r.jsx)(i,{color:"blue",children:(0,r.jsxs)(a.ol,{children:["\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"Guardar la Solicitud Original"}),": Cuando un usuario intenta acceder a una p\xe1gina que requiere autenticaci\xf3n, y a\xfan no ha iniciado sesi\xf3n, Spring Security detecta la excepci\xf3n de autenticaci\xf3n (AuthenticationException). En ese momento, el ",(0,r.jsx)(a.strong,{children:"ExceptionTranslationFilter"})," guarda la solicitud en el ",(0,r.jsx)(a.strong,{children:"RequestCache"})," antes de redirigir al usuario a la p\xe1gina de inicio de sesi\xf3n."]}),"\n"]})}),(0,r.jsx)(i,{color:"darkBlue",children:(0,r.jsxs)(a.ol,{start:"2",children:["\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"Repetir la Solicitud Original Despu\xe9s de Autenticarse"}),": Una vez que el usuario inicia sesi\xf3n con \xe9xito, el filtro ",(0,r.jsx)(a.strong,{children:"RequestCacheAwareFilter"})," se encarga de obtener la solicitud que se guard\xf3 en el ",(0,r.jsx)(a.code,{children:"RequestCache"}),' y la "repite" (reenv\xeda) para que el usuario vaya directamente a la p\xe1gina que originalmente intent\xf3 visitar.']}),"\n"]})})]}),"\n",(0,r.jsxs)(i,{children:[(0,r.jsx)(a.h3,{id:"implementaci\xf3n-por-defecto-httpsessionrequestcache",children:"Implementaci\xf3n por Defecto: HttpSessionRequestCache"}),(0,r.jsxs)(a.p,{children:["Por defecto, Spring Security utiliza una implementaci\xf3n de ",(0,r.jsx)(a.code,{children:"RequestCache"})," llamada ",(0,r.jsx)(a.strong,{children:"HttpSessionRequestCache"}),", que almacena la solicitud del usuario en la sesi\xf3n HTTP (un espacio de almacenamiento temporal que sigue al usuario durante su interacci\xf3n con la aplicaci\xf3n). Esto permite que la solicitud est\xe9 disponible cuando el usuario se autentica."]})]}),"\n",(0,r.jsxs)(i,{children:[(0,r.jsx)(a.h4,{id:"ejemplo-de-c\xf3digo-para-personalizar-requestcache",children:"Ejemplo de C\xf3digo para Personalizar RequestCache"}),(0,r.jsxs)(a.p,{children:["Aqu\xed tienes un ejemplo de c\xf3mo puedes personalizar el ",(0,r.jsx)(a.strong,{children:"RequestCache"})," para que solo revise las solicitudes guardadas si hay un par\xe1metro llamado ",(0,r.jsx)(a.code,{children:"continue"})," en la solicitud. Esto significa que solo en ciertas condiciones espec\xedficas se intentar\xe1 reutilizar la solicitud guardada."]}),(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-java",children:'@Bean\r\nDefaultSecurityFilterChain springSecurity(HttpSecurity http) throws Exception {\r\n    HttpSessionRequestCache requestCache = new HttpSessionRequestCache();\r\n    requestCache.setMatchingRequestParameterName("continue"); // Solo chequea si est\xe1 presente el par\xe1metro "continue"\r\n    http\r\n        // Otras configuraciones de seguridad...\r\n        .requestCache((cache) -> cache\r\n            .requestCache(requestCache) // Personaliza el RequestCache\r\n        );\r\n    return http.build();\r\n}\n'})}),(0,r.jsx)(a.h4,{id:"desglose-del-c\xf3digo",children:"Desglose del C\xf3digo"}),(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:(0,r.jsx)(a.code,{children:"HttpSessionRequestCache"})}),": Esta es la clase que guarda las solicitudes en la sesi\xf3n HTTP."]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:(0,r.jsx)(a.code,{children:'setMatchingRequestParameterName("continue")'})}),": Esto establece que el ",(0,r.jsx)(a.code,{children:"RequestCache"})," solo comprobar\xe1 las solicitudes guardadas si el par\xe1metro ",(0,r.jsx)(a.code,{children:'"continue"'})," est\xe1 presente en la solicitud. Es un control adicional para que no todas las solicitudes se guarden autom\xe1ticamente."]}),"\n"]})]}),"\n",(0,r.jsxs)(i,{children:[(0,r.jsx)(a.h3,{id:"evitar-guardar-solicitudes",children:"Evitar Guardar Solicitudes"}),(0,r.jsx)(a.p,{children:"En algunos casos, quiz\xe1s no quieras guardar la solicitud original de un usuario no autenticado en la sesi\xf3n. Por ejemplo:"}),(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsx)(a.li,{children:"Puede que prefieras almacenar esa solicitud en otro lugar, como en el navegador del usuario o en una base de datos."}),"\n",(0,r.jsx)(a.li,{children:"Tal vez quieras redirigir al usuario siempre a una p\xe1gina de inicio o una p\xe1gina predeterminada despu\xe9s de autenticarse, en lugar de devolverlo a la p\xe1gina que intentaba acceder originalmente."}),"\n"]}),(0,r.jsxs)(a.p,{children:["Para desactivar esta caracter\xedstica de guardar solicitudes, puedes usar una implementaci\xf3n especial llamada ",(0,r.jsx)(a.strong,{children:"NullRequestCache"}),". Como su nombre lo indica, esta clase no guarda la solicitud en ning\xfan lugar."]}),(0,r.jsxs)(i,{children:[(0,r.jsx)(a.h4,{id:"ejemplo-de-c\xf3digo-para-no-guardar-la-solicitud",children:"Ejemplo de C\xf3digo para No Guardar la Solicitud"}),(0,r.jsxs)(a.p,{children:["Aqu\xed tienes un ejemplo de c\xf3mo desactivar el almacenamiento de solicitudes utilizando ",(0,r.jsx)(a.strong,{children:"NullRequestCache"}),":"]}),(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-java",children:"@Bean\r\nSecurityFilterChain springSecurity(HttpSecurity http) throws Exception {\r\n    RequestCache nullRequestCache = new NullRequestCache();\r\n    http\r\n        // Otras configuraciones de seguridad...\r\n        .requestCache((cache) -> cache\r\n            .requestCache(nullRequestCache) // No guarda las solicitudes\r\n        );\r\n    return http.build();\r\n}\n"})}),(0,r.jsx)(a.h4,{id:"desglose-del-c\xf3digo-1",children:"Desglose del C\xf3digo"}),(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:(0,r.jsx)(a.code,{children:"NullRequestCache"})}),": Esta clase desactiva completamente la funcionalidad de guardar solicitudes. Despu\xe9s de que un usuario se autentica, se le redirige a una p\xe1gina predeterminada, no a la p\xe1gina que originalmente intent\xf3 visitar."]}),"\n"]})]})]}),"\n",(0,r.jsxs)(i,{children:[(0,r.jsx)(a.h3,{id:"requestcacheawarefilter",children:"RequestCacheAwareFilter"}),(0,r.jsxs)(a.p,{children:["El ",(0,r.jsx)(a.strong,{children:"RequestCacheAwareFilter"})," es el filtro responsable de recuperar y reproducir la solicitud original que fue guardada en el ",(0,r.jsx)(a.code,{children:"RequestCache"}),". Su trabajo es sencillo: cuando el usuario ha sido autenticado correctamente, este filtro busca la solicitud guardada en el ",(0,r.jsx)(a.code,{children:"RequestCache"})," y la repite para que el usuario pueda continuar su flujo normal."]})]}),"\n",(0,r.jsxs)(a.p,{children:["La capacidad de guardar y reproducir solicitudes es crucial en aplicaciones donde los usuarios necesitan autenticarse para acceder a ciertos recursos. Con ",(0,r.jsx)(a.strong,{children:"RequestCache"}),", Spring Security facilita este proceso, asegurando que los usuarios sean redirigidos correctamente a la p\xe1gina que intentaban visitar despu\xe9s de autenticarse. Adem\xe1s, tienes flexibilidad para personalizar c\xf3mo se guardan o no las solicitudes, adaptando el comportamiento a las necesidades de tu aplicaci\xf3n."]})]})}function d(e={}){const{wrapper:a}={...(0,n.R)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,a,i)=>{i.d(a,{R:()=>t,x:()=>c});var r=i(6540);const n={},s=r.createContext(n);function t(e){const a=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function c(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:t(e.components),r.createElement(s.Provider,{value:a},e.children)}}}]);