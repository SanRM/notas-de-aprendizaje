"use strict";(self.webpackChunknotas_personales=self.webpackChunknotas_personales||[]).push([[1939],{6836:(e,r,i)=>{i.r(r),i.d(r,{assets:()=>d,contentTitle:()=>t,default:()=>l,frontMatter:()=>a,metadata:()=>o,toc:()=>u});var n=i(4848),s=i(8453);const a={sidebar_position:4},t=void 0,o={id:"Lenguajes de programaci\xf3n/Java/Spring/Spring Security/Autenticaci\xf3n/Arquitectura de la autenticaci\xf3n/GrantedAuthority",title:"GrantedAuthority",description:"En t\xe9rminos simples, una GrantedAuthority es un permiso o privilegio que se le otorga a un usuario dentro del sistema de seguridad. Representa lo que un usuario tiene permitido hacer en la aplicaci\xf3n. Un ejemplo t\xedpico de una GrantedAuthority ser\xeda un rol como ROLEADMINISTRATOR o ROLEUSER. Estas son autorizaciones de alto nivel que se asignan al usuario.",source:"@site/docs/Lenguajes de programaci\xf3n/Java/Spring/Spring Security/Autenticaci\xf3n/Arquitectura de la autenticaci\xf3n/GrantedAuthority.md",sourceDirName:"Lenguajes de programaci\xf3n/Java/Spring/Spring Security/Autenticaci\xf3n/Arquitectura de la autenticaci\xf3n",slug:"/Lenguajes de programaci\xf3n/Java/Spring/Spring Security/Autenticaci\xf3n/Arquitectura de la autenticaci\xf3n/GrantedAuthority",permalink:"/notas-de-aprendizaje/docs/Lenguajes de programaci\xf3n/Java/Spring/Spring Security/Autenticaci\xf3n/Arquitectura de la autenticaci\xf3n/GrantedAuthority",draft:!1,unlisted:!1,editUrl:"https://github.com/SanRM/notas-de-aprendizaje/edit/main/docs/Lenguajes de programaci\xf3n/Java/Spring/Spring Security/Autenticaci\xf3n/Arquitectura de la autenticaci\xf3n/GrantedAuthority.md",tags:[],version:"current",lastUpdatedBy:"SanRM",lastUpdatedAt:1729228641e3,sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"AuthenticationManager",permalink:"/notas-de-aprendizaje/docs/Lenguajes de programaci\xf3n/Java/Spring/Spring Security/Autenticaci\xf3n/Arquitectura de la autenticaci\xf3n/AuthenticationManager"},next:{title:"ProviderManager",permalink:"/notas-de-aprendizaje/docs/Lenguajes de programaci\xf3n/Java/Spring/Spring Security/Autenticaci\xf3n/Arquitectura de la autenticaci\xf3n/ProviderManager"}},d={},u=[{value:"\xbfC\xf3mo funciona GrantedAuthority en Spring Security?",id:"c\xf3mo-funciona-grantedauthority-en-spring-security",level:3},{value:"Ejemplo de GrantedAuthority",id:"ejemplo-de-grantedauthority",level:4},{value:"Obteniendo las GrantedAuthorities",id:"obteniendo-las-grantedauthorities",level:3},{value:"\xbfQu\xe9 es un Principal?",id:"qu\xe9-es-un-principal",level:3},{value:"\xbfPara qu\xe9 se usan las GrantedAuthorities?",id:"para-qu\xe9-se-usan-las-grantedauthorities",level:3},{value:"Carga de las GrantedAuthorities",id:"carga-de-las-grantedauthorities",level:3},{value:"Ejemplo de UserDetailsService cargando GrantedAuthorities:",id:"ejemplo-de-userdetailsservice-cargando-grantedauthorities",level:4},{value:"\xbfQu\xe9 tipo de permisos representan las GrantedAuthorities?",id:"qu\xe9-tipo-de-permisos-representan-las-grantedauthorities",level:3},{value:"Resumen de los puntos clave",id:"resumen-de-los-puntos-clave",level:3}];function c(e){const r={code:"code",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components},{Card:i}=r;return i||function(e,r){throw new Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Card",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(r.p,{children:["En t\xe9rminos simples, una ",(0,n.jsx)(r.strong,{children:"GrantedAuthority"})," es un permiso o privilegio que se le otorga a un usuario dentro del sistema de seguridad. Representa lo que un usuario tiene permitido hacer en la aplicaci\xf3n. Un ejemplo t\xedpico de una ",(0,n.jsx)(r.strong,{children:"GrantedAuthority"})," ser\xeda un rol como ",(0,n.jsx)(r.code,{children:"ROLE_ADMINISTRATOR"})," o ",(0,n.jsx)(r.code,{children:"ROLE_USER"}),". Estas son autorizaciones de alto nivel que se asignan al usuario."]}),"\n",(0,n.jsxs)(i,{children:[(0,n.jsx)(r.h3,{id:"c\xf3mo-funciona-grantedauthority-en-spring-security",children:"\xbfC\xf3mo funciona GrantedAuthority en Spring Security?"}),(0,n.jsxs)(r.p,{children:["En Spring Security, las ",(0,n.jsx)(r.strong,{children:"GrantedAuthorities"})," se utilizan para definir los permisos de un usuario. Estos permisos determinan qu\xe9 acciones puede realizar un usuario en el sistema. Las ",(0,n.jsx)(r.strong,{children:"GrantedAuthorities"})," son utilizadas por diferentes componentes de Spring Security para tomar decisiones de autorizaci\xf3n, como si un usuario puede acceder a un recurso web, ejecutar un m\xe9todo o interactuar con un objeto espec\xedfico del dominio."]})]}),"\n",(0,n.jsxs)(i,{children:[(0,n.jsx)(r.h4,{id:"ejemplo-de-grantedauthority",children:"Ejemplo de GrantedAuthority"}),(0,n.jsxs)(r.p,{children:["Imagina que tienes un sistema donde los usuarios pueden tener diferentes roles. Un administrador podr\xeda tener el rol ",(0,n.jsx)(r.code,{children:"ROLE_ADMIN"}),", mientras que un empleado de recursos humanos podr\xeda tener el rol ",(0,n.jsx)(r.code,{children:"ROLE_HR_SUPERVISOR"}),". Estos roles son ejemplos de ",(0,n.jsx)(r.strong,{children:"GrantedAuthorities"}),", que describen los permisos de alto nivel del usuario."]})]}),"\n",(0,n.jsxs)(i,{children:[(0,n.jsx)(r.h3,{id:"obteniendo-las-grantedauthorities",children:"Obteniendo las GrantedAuthorities"}),(0,n.jsxs)(r.p,{children:["Puedes obtener las ",(0,n.jsx)(r.strong,{children:"GrantedAuthorities"})," que tiene un usuario a trav\xe9s del m\xe9todo ",(0,n.jsx)(r.code,{children:"getAuthorities()"})," que est\xe1 disponible en el objeto de autenticaci\xf3n (",(0,n.jsx)(r.strong,{children:"Authentication"}),"). Este m\xe9todo devuelve una ",(0,n.jsx)(r.strong,{children:"Collection"})," (lista o conjunto) de objetos ",(0,n.jsx)(r.strong,{children:"GrantedAuthority"}),". Por ejemplo, despu\xe9s de que un usuario se autentica, puedes llamar a ",(0,n.jsx)(r.code,{children:"Authentication.getAuthorities()"})," para ver qu\xe9 roles o permisos tiene asignados ese usuario."]}),(0,n.jsxs)(r.p,{children:["Aqu\xed tienes un ejemplo del uso del m\xe9todo ",(0,n.jsx)(r.code,{children:"getAuthorities()"}),":"]}),(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-java",children:"Collection<? extends GrantedAuthority> authorities = authentication.getAuthorities();\n"})}),(0,n.jsx)(r.p,{children:"Este c\xf3digo te da una lista de los permisos que tiene el usuario autenticado."})]}),"\n",(0,n.jsxs)(i,{children:[(0,n.jsx)(r.h3,{id:"qu\xe9-es-un-principal",children:"\xbfQu\xe9 es un Principal?"}),(0,n.jsxs)(r.p,{children:["Un ",(0,n.jsx)(r.strong,{children:"Principal"})," es el usuario que ha sido autenticado en la aplicaci\xf3n. Las ",(0,n.jsx)(r.strong,{children:"GrantedAuthorities"})," son permisos que se le asignan a este ",(0,n.jsx)(r.strong,{children:"Principal"}),", permitiendo que el sistema de seguridad determine qu\xe9 puede hacer ese usuario."]})]}),"\n",(0,n.jsxs)(i,{children:[(0,n.jsx)(r.h3,{id:"para-qu\xe9-se-usan-las-grantedauthorities",children:"\xbfPara qu\xe9 se usan las GrantedAuthorities?"}),(0,n.jsxs)(r.p,{children:["Las ",(0,n.jsx)(r.strong,{children:"GrantedAuthorities"})," se utilizan en varias \xe1reas de seguridad dentro de una aplicaci\xf3n Spring:"]}),(0,n.jsxs)(r.ol,{children:["\n",(0,n.jsxs)(r.li,{children:["\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"Autorizaci\xf3n Web"}),": Para controlar qu\xe9 usuarios pueden acceder a ciertas rutas o p\xe1ginas en la aplicaci\xf3n web."]}),"\n"]}),"\n",(0,n.jsxs)(r.li,{children:["\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"Autorizaci\xf3n de M\xe9todos"}),": Para determinar si un usuario puede ejecutar un m\xe9todo en el c\xf3digo, por ejemplo, usando anotaciones como ",(0,n.jsx)(r.code,{children:"@PreAuthorize"})," o ",(0,n.jsx)(r.code,{children:"@Secured"}),"."]}),"\n"]}),"\n",(0,n.jsxs)(r.li,{children:["\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"Autorizaci\xf3n de Objetos del Dominio"}),": En algunos casos, las ",(0,n.jsx)(r.strong,{children:"GrantedAuthorities"})," se utilizan para definir si un usuario puede interactuar con ciertos objetos en el sistema, aunque para eso existen mecanismos m\xe1s espec\xedficos."]}),"\n"]}),"\n"]})]}),"\n",(0,n.jsxs)(i,{children:[(0,n.jsx)(r.h3,{id:"carga-de-las-grantedauthorities",children:"Carga de las GrantedAuthorities"}),(0,n.jsxs)(r.p,{children:["Cuando un usuario se autentica en la aplicaci\xf3n usando, por ejemplo, nombre de usuario y contrase\xf1a, las ",(0,n.jsx)(r.strong,{children:"GrantedAuthorities"})," suelen cargarse utilizando un servicio llamado ",(0,n.jsx)(r.strong,{children:"UserDetailsService"}),". Este servicio se encarga de recuperar los detalles del usuario desde una base de datos o cualquier otro sistema de almacenamiento, incluyendo sus permisos o roles."]}),(0,n.jsx)(r.h4,{id:"ejemplo-de-userdetailsservice-cargando-grantedauthorities",children:"Ejemplo de UserDetailsService cargando GrantedAuthorities:"}),(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-java",children:"@Override\r\npublic UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {\r\n    // Supongamos que obtenemos el usuario desde la base de datos\r\n    User user = userRepository.findByUsername(username);\r\n    \r\n    // Cargar los roles del usuario y convertirlos en GrantedAuthorities\r\n    List<GrantedAuthority> authorities = user.getRoles().stream()\r\n        .map(role -> new SimpleGrantedAuthority(role.getName()))\r\n        .collect(Collectors.toList());\r\n\r\n    return new org.springframework.security.core.userdetails.User(user.getUsername(), user.getPassword(), authorities);\r\n}\n"})}),(0,n.jsxs)(r.p,{children:["En este ejemplo, los roles del usuario se convierten en ",(0,n.jsx)(r.strong,{children:"GrantedAuthorities"})," para que puedan ser utilizados por Spring Security."]})]}),"\n",(0,n.jsxs)(i,{children:[(0,n.jsx)(r.h3,{id:"qu\xe9-tipo-de-permisos-representan-las-grantedauthorities",children:"\xbfQu\xe9 tipo de permisos representan las GrantedAuthorities?"}),(0,n.jsxs)(r.p,{children:["Generalmente, las ",(0,n.jsx)(r.strong,{children:"GrantedAuthorities"})," representan permisos ",(0,n.jsx)(r.strong,{children:"a nivel de aplicaci\xf3n"}),". Esto significa que no se asocian con objetos espec\xedficos del dominio. Por ejemplo, ser\xeda poco pr\xe1ctico tener una ",(0,n.jsx)(r.strong,{children:"GrantedAuthority"}),' para "ver el empleado n\xfamero 54", porque podr\xedas tener miles de empleados, y eso consumir\xeda mucha memoria y ralentizar\xeda la autenticaci\xf3n.']}),(0,n.jsx)(r.p,{children:"En lugar de eso, Spring Security recomienda utilizar mecanismos m\xe1s especializados para manejar los permisos espec\xedficos de objetos, como las capacidades de seguridad para objetos de dominio de Spring."})]}),"\n",(0,n.jsxs)(i,{children:[(0,n.jsx)(r.h3,{id:"resumen-de-los-puntos-clave",children:"Resumen de los puntos clave"}),(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.strong,{children:"GrantedAuthority"})," representa permisos de alto nivel, como roles (",(0,n.jsx)(r.code,{children:"ROLE_ADMIN"}),", ",(0,n.jsx)(r.code,{children:"ROLE_USER"}),")."]}),"\n",(0,n.jsxs)(r.li,{children:["Puedes obtener las ",(0,n.jsx)(r.strong,{children:"GrantedAuthorities"})," de un usuario autenticado a trav\xe9s de ",(0,n.jsx)(r.code,{children:"Authentication.getAuthorities()"}),"."]}),"\n",(0,n.jsx)(r.li,{children:"Son utilizadas en varias partes del sistema de Spring Security, como la autorizaci\xf3n de rutas web, m\xe9todos y objetos de dominio."}),"\n",(0,n.jsxs)(r.li,{children:["Generalmente se cargan a trav\xe9s de un servicio como ",(0,n.jsx)(r.strong,{children:"UserDetailsService"})," y se asocian a nivel de aplicaci\xf3n."]}),"\n",(0,n.jsx)(r.li,{children:"No se utilizan para permisos de objetos espec\xedficos, como ver o modificar un \xfanico registro en la base de datos, para lo cual se recomienda un enfoque m\xe1s eficiente."}),"\n"]}),(0,n.jsxs)(r.p,{children:["Las ",(0,n.jsx)(r.strong,{children:"GrantedAuthorities"})," son fundamentales para gestionar los permisos en una aplicaci\xf3n Spring Security. Permiten asignar roles y otros permisos a los usuarios de una manera eficiente y escalable, asegurando que el sistema pueda controlar qui\xe9n puede hacer qu\xe9 en la aplicaci\xf3n. \xa1Espero que esta explicaci\xf3n haya sido clara y completa! Si tienes m\xe1s preguntas o necesitas m\xe1s detalles, \xa1estoy aqu\xed para ayudarte!"]})]})]})}function l(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},8453:(e,r,i)=>{i.d(r,{R:()=>t,x:()=>o});var n=i(6540);const s={},a=n.createContext(s);function t(e){const r=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),n.createElement(a.Provider,{value:r},e.children)}}}]);