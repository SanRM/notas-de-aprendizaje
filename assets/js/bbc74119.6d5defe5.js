"use strict";(self.webpackChunknotas_personales=self.webpackChunknotas_personales||[]).push([[9018],{2573:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var s=n(4848),i=n(8453);const r={title:"Reglas para crear dise\xf1os de calidad"},o=void 0,l={id:"Patrones de dise\xf1o/Arquitect\xf3nicos/Clean code/reglas para crear dise\xf1os de calidad",title:"Reglas para crear dise\xf1os de calidad",description:"Se considera que las 5 reglas de Kent Beck del libro \u201cdise\xf1o sencillo\u201d son fundamentales para crear un software bien dise\xf1ado.",source:"@site/docs/Patrones de dise\xf1o/Arquitect\xf3nicos/Clean code/reglas para crear dise\xf1os de calidad.md",sourceDirName:"Patrones de dise\xf1o/Arquitect\xf3nicos/Clean code",slug:"/Patrones de dise\xf1o/Arquitect\xf3nicos/Clean code/reglas para crear dise\xf1os de calidad",permalink:"/notas-de-aprendizaje/docs/Patrones de dise\xf1o/Arquitect\xf3nicos/Clean code/reglas para crear dise\xf1os de calidad",draft:!1,unlisted:!1,editUrl:"https://github.com/SanRM/notas-de-aprendizaje/edit/main/docs/Patrones de dise\xf1o/Arquitect\xf3nicos/Clean code/reglas para crear dise\xf1os de calidad.md",tags:[],version:"current",lastUpdatedBy:"SanRM",lastUpdatedAt:1722011095e3,frontMatter:{title:"Reglas para crear dise\xf1os de calidad"},sidebar:"tutorialSidebar",previous:{title:"Principios SOLID",permalink:"/notas-de-aprendizaje/docs/Patrones de dise\xf1o/Arquitect\xf3nicos/Clean code/SOLID"},next:{title:"DAO vs DTO",permalink:"/notas-de-aprendizaje/docs/Patrones de dise\xf1o/Estructurales/Dao vs Dto"}},d={},c=[{value:"Seg\xfan Kent, un dise\xf1o es sencillo si cumple estas 5 reglas:",id:"seg\xfan-kent-un-dise\xf1o-es-sencillo-si-cumple-estas-5-reglas",level:2},{value:"1. Ejecutar todas las pruebas",id:"1-ejecutar-todas-las-pruebas",level:3},{value:"2. Refactorizar",id:"2-refactorizar",level:3},{value:"3. Eliminar duplicados",id:"3-eliminar-duplicados",level:3},{value:"4. Expresividad",id:"4-expresividad",level:3},{value:"5. Clases y m\xe9todos m\xednimos",id:"5-clases-y-m\xe9todos-m\xednimos",level:3}];function t(e){const a={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components},{Card:n}=a;return n||function(e,a){throw new Error("Expected "+(a?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Card",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(a.p,{children:"Se considera que las 5 reglas de Kent Beck del libro \u201cdise\xf1o sencillo\u201d son fundamentales para crear un software bien dise\xf1ado."}),"\n",(0,s.jsx)(a.h2,{id:"seg\xfan-kent-un-dise\xf1o-es-sencillo-si-cumple-estas-5-reglas",children:"Seg\xfan Kent, un dise\xf1o es sencillo si cumple estas 5 reglas:"}),"\n",(0,s.jsxs)(n,{children:[(0,s.jsx)(a.h3,{id:"1-ejecutar-todas-las-pruebas",children:"1. Ejecutar todas las pruebas"}),(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsxs)(a.li,{children:["\n",(0,s.jsxs)(a.p,{children:["La efectividad de un sistema no solo depende de su dise\xf1o te\xf3rico, sino tambi\xe9n de su capacidad para ser probado y verificar su funcionamiento real, un sistema bien probado y que supera todas las pruebas se considera ",(0,s.jsx)(a.code,{children:"testable"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(a.li,{children:["\n",(0,s.jsxs)(a.p,{children:["La ",(0,s.jsx)(a.code,{children:"testabilidad"})," se logra dise\xf1ando clases peque\xf1as y con un \xfanico prop\xf3sito, lo que facilita las pruebas y promueve el Principio de Responsabilidad \xdanica (SRP)."]}),"\n"]}),"\n",(0,s.jsxs)(a.li,{children:["\n",(0,s.jsx)(a.p,{children:"La capacidad de realizar pruebas continuas tambi\xe9n influye en la aplicaci\xf3n de principios como el Principio de Inversi\xf3n de Dependencia (DIP) y el uso de herramientas como la inyecci\xf3n de dependencias."}),"\n"]}),"\n"]})]}),"\n",(0,s.jsxs)(n,{children:[(0,s.jsx)(a.h3,{id:"2-refactorizar",children:"2. Refactorizar"}),(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsxs)(a.li,{children:["\n",(0,s.jsx)(a.p,{children:"Despu\xe9s de crear pruebas, es esencial mantener la limpieza del c\xf3digo y las clases a trav\xe9s de la refactorizaci\xf3n progresiva."}),"\n"]}),"\n",(0,s.jsxs)(a.li,{children:["\n",(0,s.jsx)(a.p,{children:"Durante este proceso, se a\xf1aden l\xedneas de c\xf3digo y luego se eval\xfaa si el dise\xf1o ha mejorado o empeorado, si hay un deterioro, se realiza una limpieza y se ejecutan las pruebas para asegurar que no haya impactos negativos."}),"\n"]}),"\n",(0,s.jsxs)(a.li,{children:["\n",(0,s.jsx)(a.p,{children:"La existencia de pruebas brinda confianza para realizar cambios sin temor a da\xf1ar el c\xf3digo."}),"\n"]}),"\n"]})]}),"\n",(0,s.jsxs)(n,{children:[(0,s.jsx)(a.h3,{id:"3-eliminar-duplicados",children:"3. Eliminar duplicados"}),(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsx)(a.li,{children:"Los duplicados son los mayores enemigos de un sistema bien dise\xf1ado, suponen un esfuerzo adicional, riesgos a\xf1adidos y una complejidad a mayores innecesaria."}),"\n",(0,s.jsx)(a.li,{children:"La creaci\xf3n de un sistema limpio requiere la eliminaci\xf3n de duplicados, aunque sean unas cuantas l\xedneas de c\xf3digo."}),"\n",(0,s.jsx)(a.li,{children:"El patr\xf3n M\xe9todo de plantilla es una t\xe9cnica muy utilizada para eliminar duplicados de nivel superior."}),"\n"]}),(0,s.jsxs)(n,{children:[(0,s.jsx)(a.p,{children:"Ejemplo"}),(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-java",children:"public class VacationPolicy {\r\n\r\n\tpublic void accrueUSDivisionVacation() {\r\n\t\t// c\xf3digo para calcular las vacaciones en funci\xf3n de las horas trabajadas\r\n\r\n\t\t// c\xf3digo para garantizar que las vacaciones cumplen los m\xednimos legales\r\n\r\n\t\t// c\xf3digo para aplicar vacation al registro payroll\r\n\t}\r\n\r\n\tpublic void accrueEUDivisionVacation() {\r\n\t\t// c\xf3digo para calcular las vacaciones en funci\xf3n de las horas trabajadas\r\n\r\n\t\t// c\xf3digo para garantizar que las vacaciones cumplen los m\xednimos legales\r\n\r\n\t\t// c\xf3digo para aplicar vacation al registro payroll\r\n\t}\r\n}\n"})}),(0,s.jsxs)(a.p,{children:["El c\xf3digo entre ",(0,s.jsx)(a.code,{children:"accrueUSDivisionVacation"})," y ",(0,s.jsx)(a.code,{children:"accrueEuropeanDivisionVacation"})," es pr\xe1cticamente id\xe9ntico, a excepci\xf3n del c\xe1lculo de m\xednimos legales esa parte del algoritmo cambia en funci\xf3n del tipo de empleado."]}),(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsxs)(a.li,{children:["\n",(0,s.jsx)(a.p,{children:"Podemos eliminar la duplicaci\xf3n evidente si aplicamos del patr\xf3n de M\xe9todo de plantilla:"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-java",children:"abstract public class VacationPolicy {\r\n\r\n\tpublic void accrueVacation() {\r\n\t\tcalculateBaseVacationHours();\r\n\t\talterForLegalMinimums();\r\n\t\tapplyToPayroll();\r\n\t}\r\n\r\n\tprivate void calculateBaseVacationHours(){};\r\n\tabstract protected void alterForLegalMinimums();\r\n\tprivate void applyToPayroll(){};\r\n}\r\n\r\npublic class USVacationPolicy extends VacationPolicy {}\r\n\t@Override protected void alterForLegalMinimums() {\r\n\t\t// L\xf3gica espec\xedfica de EE.UU.\r\n\t}\r\n}\r\n\r\npublic class EUVacationPolicy extends VacationPolicy {\r\n\t@Override protected void alterForLegalMinimums() {\r\n\t\t// L\xf3gica espec\xedfica de la UE.\r\n\t}\r\n}\r\n\n"})}),"\n",(0,s.jsxs)(a.p,{children:["De esta forma las subclases ocupan el vac\xedo generado en el algoritmo ",(0,s.jsx)(a.code,{children:"accrueVacation"}),"\r\ny solamente proporcionan los datos que no est\xe1n duplicados."]}),"\n"]}),"\n"]})]})]}),"\n",(0,s.jsxs)(n,{children:[(0,s.jsx)(a.h3,{id:"4-expresividad",children:"4. Expresividad"}),(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsxs)(a.li,{children:["\n",(0,s.jsx)(a.p,{children:"El principal coste de un proyecto de software es su mantenimiento a largo plazo, para minimizar los posibles defectos al realizar cambios, es fundamental que comprendamos el funcionamiento del sistema."}),"\n"]}),"\n",(0,s.jsxs)(a.li,{children:["\n",(0,s.jsx)(a.p,{children:"Al aumentar la complejidad de los sistemas, el programador necesita m\xe1s tiempo para\r\nentenderlo y aumentan las posibilidades de errores."}),"\n"]}),"\n",(0,s.jsxs)(a.li,{children:["\n",(0,s.jsx)(a.p,{children:"El c\xf3digo debe expresar con claridad la intenci\xf3n de su autor. Cuando m\xe1s claro sea el c\xf3digo, menos tiempo perder\xe1n otros en intentar comprenderlo, esto reduce los defectos y el coste de mantenimiento."}),"\n"]}),"\n",(0,s.jsxs)(a.li,{children:["\n",(0,s.jsx)(a.p,{children:"Las pruebas de unidad bien escritas tambi\xe9n son expresivas. Uno de los principales objetivos de una prueba es servir de documentaci\xf3n mediante ejemplos, los que lean las pruebas deben entender con facilidad para qu\xe9 sirve una clase."}),"\n"]}),"\n"]})]}),"\n",(0,s.jsxs)(n,{children:[(0,s.jsx)(a.h3,{id:"5-clases-y-m\xe9todos-m\xednimos",children:"5. Clases y m\xe9todos m\xednimos"}),(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsxs)(a.li,{children:["\n",(0,s.jsx)(a.p,{children:"Esta regla es la de menor prioridad de todas, aunque sea importante reducir la cantidad de clases y funciones, es m\xe1s importante contar con pruebas, eliminar duplicados y expresarse correctamente."}),"\n"]}),"\n",(0,s.jsxs)(a.li,{children:["\n",(0,s.jsx)(a.p,{children:"Se busca minimizar el n\xfamero de clases y m\xe9todos en el c\xf3digo. La simplicidad es clave para mejorar la comprensi\xf3n y mantenibilidad del software."}),"\n"]}),"\n",(0,s.jsxs)(a.li,{children:["\n",(0,s.jsx)(a.p,{children:"Apoya el principio de SRP, donde cada clase y m\xe9todo debe tener una \xfanica responsabilidad clara y espec\xedfica. Esto facilita la comprensi\xf3n y la identificaci\xf3n de posibles mejoras o errores."}),"\n"]}),"\n"]})]})]})}function p(e={}){const{wrapper:a}={...(0,i.R)(),...e.components};return a?(0,s.jsx)(a,{...e,children:(0,s.jsx)(t,{...e})}):t(e)}},8453:(e,a,n)=>{n.d(a,{R:()=>o,x:()=>l});var s=n(6540);const i={},r=s.createContext(i);function o(e){const a=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function l(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:a},e.children)}}}]);