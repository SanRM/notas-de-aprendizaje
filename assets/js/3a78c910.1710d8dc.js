"use strict";(self.webpackChunknotas_personales=self.webpackChunknotas_personales||[]).push([[7009],{4309:(e,r,a)=>{a.r(r),a.d(r,{assets:()=>d,contentTitle:()=>s,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>t});var o=a(4848),n=a(8453);const l={sidebar_position:14},s=void 0,i={id:"Frameworks/Angular/Formularios/Formularios",title:"Formularios",description:"Los formularios son esenciales en muchas aplicaciones, ya que permiten capturar y gestionar la entrada del usuario. En Angular, existen dos tipos principales de formularios: formularios basados en plantillas (template-driven) y formularios reactivos (reactive forms). Aqu\xed exploraremos c\xf3mo configurar un formulario utilizando el enfoque de formulario basado en plantillas.",source:"@site/docs/Frameworks/Angular/Formularios/Formularios.md",sourceDirName:"Frameworks/Angular/Formularios",slug:"/Frameworks/Angular/Formularios/",permalink:"/notas-de-aprendizaje/docs/Frameworks/Angular/Formularios/",draft:!1,unlisted:!1,editUrl:"https://github.com/SanRM/notas-de-aprendizaje/edit/main/docs/Frameworks/Angular/Formularios/Formularios.md",tags:[],version:"current",lastUpdatedBy:"SanRM",lastUpdatedAt:1730660085e3,sidebarPosition:14,frontMatter:{sidebar_position:14},sidebar:"tutorialSidebar",previous:{title:"Usar RouterLink para Navegaci\xf3n",permalink:"/notas-de-aprendizaje/docs/Frameworks/Angular/Routing/Usar RouterLink para Navegaci\xf3n"},next:{title:"Obtener el valor del formulario",permalink:"/notas-de-aprendizaje/docs/Frameworks/Angular/Formularios/Obtener el valor del formulario"}},d={},t=[{value:"Paso 1: Crear un Campo de Entrada",id:"paso-1-crear-un-campo-de-entrada",level:4},{value:"Paso 2: Importar <code>FormsModule</code>",id:"paso-2-importar-formsmodule",level:4},{value:"Paso 3: A\xf1adir la Vinculaci\xf3n de Datos con <code>ngModel</code>",id:"paso-3-a\xf1adir-la-vinculaci\xf3n-de-datos-con-ngmodel",level:4},{value:"Nota sobre <code>[(ngModel)]</code>",id:"nota-sobre-ngmodel",level:4},{value:"Resumen",id:"resumen",level:4}];function c(e){const r={code:"code",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,n.R)(),...e.components},{Card:a}=r;return a||function(e,r){throw new Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Card",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(r.p,{children:["Los formularios son esenciales en muchas aplicaciones, ya que permiten capturar y gestionar la entrada del usuario. En Angular, existen dos tipos principales de formularios: ",(0,o.jsx)(r.strong,{children:"formularios basados en plantillas"})," (template-driven) y ",(0,o.jsx)(r.strong,{children:"formularios reactivos"})," (reactive forms). Aqu\xed exploraremos c\xf3mo configurar un formulario utilizando el enfoque de ",(0,o.jsx)(r.strong,{children:"formulario basado en plantillas"}),"."]}),"\n",(0,o.jsxs)(a,{children:[(0,o.jsx)(r.h4,{id:"paso-1-crear-un-campo-de-entrada",children:"Paso 1: Crear un Campo de Entrada"}),(0,o.jsxs)(r.p,{children:["Comienza a\xf1adiendo un campo de entrada de texto en el archivo ",(0,o.jsx)(r.code,{children:"user.component.ts"}),". Este campo permitir\xe1 que el usuario ingrese su marco de trabajo favorito."]}),(0,o.jsx)(a,{children:(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-html",children:'<label for="framework">\r\n  Favorite Framework:\r\n  <input id="framework" type="text" />\r\n</label>\n'})})})]}),"\n",(0,o.jsxs)(a,{children:[(0,o.jsxs)(r.h4,{id:"paso-2-importar-formsmodule",children:["Paso 2: Importar ",(0,o.jsx)(r.code,{children:"FormsModule"})]}),(0,o.jsxs)(r.p,{children:["Para activar la funcionalidad de Angular que permite la vinculaci\xf3n de datos en formularios, es necesario importar ",(0,o.jsx)(r.code,{children:"FormsModule"})," desde ",(0,o.jsx)(r.code,{children:"@angular/forms"})," y agregarlo a los imports del componente ",(0,o.jsx)(r.code,{children:"UserComponent"}),"."]}),(0,o.jsx)(a,{children:(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-typescript",children:"import { Component } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@Component({\r\n    ...\r\n  standalone: true,\r\n  imports: [FormsModule],\r\n})\r\nexport class UserComponent {}\n"})})})]}),"\n",(0,o.jsxs)(a,{children:[(0,o.jsxs)(r.h4,{id:"paso-3-a\xf1adir-la-vinculaci\xf3n-de-datos-con-ngmodel",children:["Paso 3: A\xf1adir la Vinculaci\xf3n de Datos con ",(0,o.jsx)(r.code,{children:"ngModel"})]}),(0,o.jsxs)(r.p,{children:["El m\xf3dulo ",(0,o.jsx)(r.code,{children:"FormsModule"})," incluye la directiva ",(0,o.jsx)(r.code,{children:"ngModel"}),", que permite vincular el valor de entrada del formulario a una propiedad en la clase del componente. En este caso, vamos a utilizar la propiedad ",(0,o.jsx)(r.code,{children:"favoriteFramework"})," para capturar el valor ingresado por el usuario."]}),(0,o.jsxs)(r.p,{children:["Actualiza el campo de entrada para que use ",(0,o.jsx)(r.code,{children:"[(ngModel)]"}),", que proporciona una vinculaci\xf3n bidireccional entre el valor del campo y la propiedad."]}),(0,o.jsx)(a,{children:(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-html",children:'<label for="framework">\r\n  Favorite Framework:\r\n  <input id="framework" type="text" [(ngModel)]="favoriteFramework" />\r\n</label>\n'})})}),(0,o.jsxs)(a,{color:"yellow",children:[(0,o.jsxs)(r.h4,{id:"nota-sobre-ngmodel",children:["Nota sobre ",(0,o.jsx)(r.code,{children:"[(ngModel)]"})]}),(0,o.jsxs)(r.p,{children:["La sintaxis ",(0,o.jsx)(r.code,{children:"[()]"}),', apodada "banana in a box" \ud83c\udf4c\ud83d\udce6, representa una ',(0,o.jsx)(r.strong,{children:"vinculaci\xf3n bidireccional"})," en Angular, que combina vinculaci\xf3n de propiedad y vinculaci\xf3n de eventos. Al usar ",(0,o.jsx)(r.code,{children:"[(ngModel)]"}),", el valor de entrada se actualiza autom\xe1ticamente en la propiedad de la clase del componente y viceversa."]})]})]}),"\n",(0,o.jsx)(r.h4,{id:"resumen",children:"Resumen"}),"\n",(0,o.jsxs)(r.ol,{children:["\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:"Crear el campo de entrada"})," en la plantilla HTML."]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsxs)(r.strong,{children:["Importar ",(0,o.jsx)(r.code,{children:"FormsModule"})]})," en el componente para habilitar la funcionalidad de formulario."]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsxs)(r.strong,{children:["Utilizar ",(0,o.jsx)(r.code,{children:"[(ngModel)]"})]})," para la vinculaci\xf3n bidireccional del valor de entrada."]}),"\n"]}),"\n",(0,o.jsx)(r.p,{children:"Con esta configuraci\xf3n, el formulario est\xe1 listo para capturar y sincronizar la entrada del usuario en tiempo real con el componente en Angular."})]})}function u(e={}){const{wrapper:r}={...(0,n.R)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,r,a)=>{a.d(r,{R:()=>s,x:()=>i});var o=a(6540);const n={},l=o.createContext(n);function s(e){const r=o.useContext(l);return o.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),o.createElement(l.Provider,{value:r},e.children)}}}]);