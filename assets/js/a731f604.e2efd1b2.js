"use strict";(self.webpackChunknotas_personales=self.webpackChunknotas_personales||[]).push([[7035],{2390:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>o,contentTitle:()=>r,default:()=>d,frontMatter:()=>c,metadata:()=>s,toc:()=>u});var t=i(4848),a=i(8453);const c={sidebar_position:7},r=void 0,s={id:"Lenguajes de programaci\xf3n/Java/Spring/Spring Security/Autenticaci\xf3n/Arquitectura de la autenticaci\xf3n/AuthenticationEntryPoint",title:"AuthenticationEntryPoint",description:"\xbfQu\xe9 es un AuthenticationEntryPoint?",source:"@site/docs/Lenguajes de programaci\xf3n/Java/Spring/Spring Security/Autenticaci\xf3n/Arquitectura de la autenticaci\xf3n/AuthenticationEntryPoint.md",sourceDirName:"Lenguajes de programaci\xf3n/Java/Spring/Spring Security/Autenticaci\xf3n/Arquitectura de la autenticaci\xf3n",slug:"/Lenguajes de programaci\xf3n/Java/Spring/Spring Security/Autenticaci\xf3n/Arquitectura de la autenticaci\xf3n/AuthenticationEntryPoint",permalink:"/notas-de-aprendizaje/docs/Lenguajes de programaci\xf3n/Java/Spring/Spring Security/Autenticaci\xf3n/Arquitectura de la autenticaci\xf3n/AuthenticationEntryPoint",draft:!1,unlisted:!1,editUrl:"https://github.com/SanRM/notas-de-aprendizaje/edit/main/docs/Lenguajes de programaci\xf3n/Java/Spring/Spring Security/Autenticaci\xf3n/Arquitectura de la autenticaci\xf3n/AuthenticationEntryPoint.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"AuthenticationProvider",permalink:"/notas-de-aprendizaje/docs/Lenguajes de programaci\xf3n/Java/Spring/Spring Security/Autenticaci\xf3n/Arquitectura de la autenticaci\xf3n/AuthenticationProvider"},next:{title:"AbstractAuthenticationProcessingFilter",permalink:"/notas-de-aprendizaje/docs/Lenguajes de programaci\xf3n/Java/Spring/Spring Security/Autenticaci\xf3n/Arquitectura de la autenticaci\xf3n/AbstractAuthenticationProcessingFilter"}},o={},u=[{value:"\xbfQu\xe9 es un AuthenticationEntryPoint?",id:"qu\xe9-es-un-authenticationentrypoint",level:3},{value:"Casos de Uso",id:"casos-de-uso",level:4},{value:"\xbfQu\xe9 Hace el AuthenticationEntryPoint?",id:"qu\xe9-hace-el-authenticationentrypoint",level:3},{value:"\xbfC\xf3mo Funciona el AuthenticationEntryPoint?",id:"c\xf3mo-funciona-el-authenticationentrypoint",level:3}];function l(n){const e={code:"code",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,a.R)(),...n.components},{Card:i}=e;return i||function(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}("Card",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h3,{id:"qu\xe9-es-un-authenticationentrypoint",children:"\xbfQu\xe9 es un AuthenticationEntryPoint?"}),"\n",(0,t.jsxs)(e.p,{children:["Un ",(0,t.jsx)(e.strong,{children:"AuthenticationEntryPoint"})," es un componente en Spring Security que se encarga de enviar una respuesta HTTP cuando un cliente intenta acceder a un recurso sin autenticarse. Es decir, es la forma en que Spring Security solicita al cliente que proporcione sus credenciales, como un nombre de usuario y contrase\xf1a."]}),"\n",(0,t.jsxs)(i,{children:[(0,t.jsx)(e.h4,{id:"casos-de-uso",children:"Casos de Uso"}),(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"Solicitud Proactiva con Credenciales"}),":"]}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"A veces, un cliente (por ejemplo, un navegador o una aplicaci\xf3n) ya env\xeda las credenciales necesarias (como un nombre de usuario y contrase\xf1a) al hacer una solicitud."}),"\n",(0,t.jsxs)(e.li,{children:["En estos casos, Spring Security ",(0,t.jsx)(e.strong,{children:"no necesita"})," pedir las credenciales porque ya est\xe1n incluidas en la solicitud."]}),"\n",(0,t.jsx)(e.li,{children:"Esto ocurre, por ejemplo, en solicitudes HTTP donde el cliente incluye encabezados de autenticaci\xf3n con tokens o credenciales."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"Solicitud Sin Autenticaci\xf3n"}),":"]}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"En otras situaciones, el cliente intenta acceder a un recurso sin estar autenticado. Es decir, el cliente no proporciona credenciales y a\xfan as\xed intenta acceder a un \xe1rea protegida de la aplicaci\xf3n."}),"\n",(0,t.jsxs)(e.li,{children:["Aqu\xed es donde entra en juego el ",(0,t.jsx)(e.strong,{children:"AuthenticationEntryPoint"}),". Si el cliente no est\xe1 autenticado, Spring Security necesita una forma de pedirle que proporcione sus credenciales."]}),"\n"]}),"\n"]}),"\n"]})]}),"\n",(0,t.jsxs)(i,{children:[(0,t.jsx)(e.h3,{id:"qu\xe9-hace-el-authenticationentrypoint",children:"\xbfQu\xe9 Hace el AuthenticationEntryPoint?"}),(0,t.jsxs)(e.p,{children:["El ",(0,t.jsx)(e.strong,{children:"AuthenticationEntryPoint"})," entra en acci\xf3n cuando un cliente intenta acceder a un recurso sin las credenciales adecuadas. Dependiendo de c\xf3mo est\xe9 configurado, este componente puede tomar varias acciones:"]}),(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Redireccionar a una P\xe1gina de Inicio de Sesi\xf3n"}),":","\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsx)(e.p,{children:"Una de las implementaciones m\xe1s comunes es redirigir al cliente a una p\xe1gina de inicio de sesi\xf3n. Aqu\xed, el cliente puede ingresar sus credenciales (como el nombre de usuario y contrase\xf1a)."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Enviar un Encabezado WWW-Authenticate"}),":","\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:["Otra opci\xf3n es enviar un encabezado HTTP llamado ",(0,t.jsx)(e.code,{children:"WWW-Authenticate"}),". Este encabezado indica al cliente que necesita autenticarse antes de poder acceder al recurso."]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsx)(e.p,{children:"Este m\xe9todo es com\xfan cuando se utiliza autenticaci\xf3n b\xe1sica (Basic Authentication), donde se env\xeda un nombre de usuario y contrase\xf1a en cada solicitud HTTP."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Tomar Otras Acciones"}),":","\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:["En algunos casos, el ",(0,t.jsx)(e.strong,{children:"AuthenticationEntryPoint"})," puede realizar acciones m\xe1s espec\xedficas, como mostrar un mensaje personalizado o invocar otro proceso de autenticaci\xf3n (como autenticaci\xf3n basada en OAuth)."]}),"\n"]}),"\n"]}),"\n"]}),(0,t.jsx)(e.h3,{id:"c\xf3mo-funciona-el-authenticationentrypoint",children:"\xbfC\xf3mo Funciona el AuthenticationEntryPoint?"}),(0,t.jsx)(e.p,{children:"El proceso general que sigue Spring Security cuando un cliente hace una solicitud sin estar autenticado es el siguiente:"}),(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"Solicitud Sin Credenciales"}),": El cliente env\xeda una solicitud a un recurso protegido, pero no incluye las credenciales necesarias."]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"Interceptaci\xf3n por Spring Security"}),": Spring Security intercepta esta solicitud y detecta que el cliente no est\xe1 autenticado."]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"Llamada al AuthenticationEntryPoint"}),": Spring Security llama al ",(0,t.jsx)(e.strong,{children:"AuthenticationEntryPoint"}),", que est\xe1 configurado para manejar este tipo de situaciones."]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"Respuesta HTTP"}),":"]}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:["El ",(0,t.jsx)(e.strong,{children:"AuthenticationEntryPoint"})," env\xeda una respuesta HTTP que puede:","\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Redirigir al cliente a una p\xe1gina de inicio de sesi\xf3n."}),"\n",(0,t.jsxs)(e.li,{children:["Enviar un encabezado ",(0,t.jsx)(e.code,{children:"WWW-Authenticate"})," para solicitar autenticaci\xf3n."]}),"\n",(0,t.jsx)(e.li,{children:"O tomar otra acci\xf3n definida."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]})]}),"\n",(0,t.jsxs)(e.p,{children:["El ",(0,t.jsx)(e.strong,{children:"AuthenticationEntryPoint"})," en Spring Security es fundamental para gestionar c\xf3mo se solicita autenticaci\xf3n cuando un cliente no ha proporcionado credenciales. Dependiendo de la configuraci\xf3n, puede redirigir al cliente a una p\xe1gina de inicio de sesi\xf3n, enviar un encabezado HTTP para solicitar autenticaci\xf3n, o realizar otras acciones. Esto asegura que los recursos protegidos solo sean accesibles para los usuarios autenticados. \xa1Si tienes m\xe1s preguntas o necesitas m\xe1s detalles, no dudes en preguntar!"]})]})}function d(n={}){const{wrapper:e}={...(0,a.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(l,{...n})}):l(n)}},8453:(n,e,i)=>{i.d(e,{R:()=>r,x:()=>s});var t=i(6540);const a={},c=t.createContext(a);function r(n){const e=t.useContext(c);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function s(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:r(n.components),t.createElement(c.Provider,{value:e},n.children)}}}]);