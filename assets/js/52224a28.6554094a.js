"use strict";(self.webpackChunknotas_personales=self.webpackChunknotas_personales||[]).push([[3881],{2680:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>d,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>c,toc:()=>l});var n=r(4848),o=r(8453);const s={sidebar_position:23},i=void 0,c={id:"Frameworks/Angular/Pipes/Formateo de datos con pipes en angular",title:"Formateo de datos con pipes en angular",description:"En Angular, los pipes son una herramienta \xfatil para transformar datos directamente en la plantilla. Los pipes pueden aplicarse a propiedades o expresiones y ofrecen formatos personalizados para fechas, n\xfameros, monedas y mucho m\xe1s. Adem\xe1s, pueden configurarse para adaptar la salida a tus necesidades espec\xedficas.",source:"@site/docs/Frameworks/Angular/Pipes/Formateo de datos con pipes en angular.md",sourceDirName:"Frameworks/Angular/Pipes",slug:"/Frameworks/Angular/Pipes/Formateo de datos con pipes en angular",permalink:"/notas-de-aprendizaje/docs/Frameworks/Angular/Pipes/Formateo de datos con pipes en angular",draft:!1,unlisted:!1,editUrl:"https://github.com/SanRM/notas-de-aprendizaje/edit/main/docs/Frameworks/Angular/Pipes/Formateo de datos con pipes en angular.md",tags:[],version:"current",lastUpdatedBy:"SanRM",lastUpdatedAt:1730678194e3,sidebarPosition:23,frontMatter:{sidebar_position:23},sidebar:"tutorialSidebar",previous:{title:"Pipes",permalink:"/notas-de-aprendizaje/docs/Frameworks/Angular/Pipes/"},next:{title:"Crear pipes personalizados",permalink:"/notas-de-aprendizaje/docs/Frameworks/Angular/Pipes/Crear pipes personalizados"}},d={},l=[{value:"Ejemplo: Personalizaci\xf3n de Pipes en Angular",id:"ejemplo-personalizaci\xf3n-de-pipes-en-angular",level:4},{value:"Paso 1: Formatear un N\xfamero con <code>DecimalPipe</code>",id:"paso-1-formatear-un-n\xfamero-con-decimalpipe",level:4},{value:"Paso 2: Formatear una Fecha con <code>DatePipe</code>",id:"paso-2-formatear-una-fecha-con-datepipe",level:4},{value:"Paso 3: Formatear una Moneda con <code>CurrencyPipe</code>",id:"paso-3-formatear-una-moneda-con-currencypipe",level:4},{value:"Ejemplo completo",id:"ejemplo-completo",level:4}];function t(e){const a={code:"code",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components},{Card:r}=a;return r||function(e,a){throw new Error("Expected "+(a?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Card",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(a.p,{children:["En Angular, los ",(0,n.jsx)(a.strong,{children:"pipes"})," son una herramienta \xfatil para transformar datos directamente en la plantilla. Los pipes pueden aplicarse a propiedades o expresiones y ofrecen formatos personalizados para fechas, n\xfameros, monedas y mucho m\xe1s. Adem\xe1s, pueden configurarse para adaptar la salida a tus necesidades espec\xedficas."]}),"\n",(0,n.jsx)(a.p,{children:"A continuaci\xf3n, exploraremos c\xf3mo usar y personalizar algunos pipes en Angular."}),"\n",(0,n.jsxs)(r,{children:[(0,n.jsx)(a.h4,{id:"ejemplo-personalizaci\xf3n-de-pipes-en-angular",children:"Ejemplo: Personalizaci\xf3n de Pipes en Angular"}),(0,n.jsxs)(r,{children:[(0,n.jsxs)(a.h4,{id:"paso-1-formatear-un-n\xfamero-con-decimalpipe",children:["Paso 1: Formatear un N\xfamero con ",(0,n.jsx)(a.code,{children:"DecimalPipe"})]}),(0,n.jsxs)(a.p,{children:["El ",(0,n.jsx)(a.code,{children:"DecimalPipe"})," en Angular permite definir la cantidad de d\xedgitos enteros y decimales en un n\xfamero. Para configurar este pipe, se usa la sintaxis ",(0,n.jsx)(a.code,{children:":"})," seguida del formato deseado."]}),(0,n.jsxs)(a.p,{children:["Actualicemos la plantilla en ",(0,n.jsx)(a.code,{children:"app.component.ts"})," para aplicar ",(0,n.jsx)(a.code,{children:"DecimalPipe"})," a una propiedad num\xe9rica (",(0,n.jsx)(a.code,{children:"num"}),") usando el formato ",(0,n.jsx)(a.code,{children:'"3.2-2"'}),":"]}),(0,n.jsx)(r,{children:(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-typescript",children:'template: `\r\n    ...\r\n    <li>N\xfamero con "decimal": {{ num | number:"3.2-2" }}</li>\r\n`\n'})})}),(0,n.jsx)(a.p,{children:"Aqu\xed:"}),(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.code,{children:"3"})," es el n\xfamero m\xednimo de d\xedgitos enteros."]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.code,{children:"2"})," es el m\xednimo de d\xedgitos decimales."]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.code,{children:"2"})," tambi\xe9n es el m\xe1ximo de d\xedgitos decimales."]}),"\n"]}),(0,n.jsxs)(a.p,{children:[(0,n.jsx)(a.strong,{children:"Ejemplo de Salida"}),": Si ",(0,n.jsx)(a.code,{children:"num = 1234.5"}),", el resultado ser\xeda ",(0,n.jsx)(a.strong,{children:'"1,234.50"'}),"."]})]}),(0,n.jsxs)(r,{children:[(0,n.jsxs)(a.h4,{id:"paso-2-formatear-una-fecha-con-datepipe",children:["Paso 2: Formatear una Fecha con ",(0,n.jsx)(a.code,{children:"DatePipe"})]}),(0,n.jsxs)(a.p,{children:[(0,n.jsx)(a.code,{children:"DatePipe"})," formatea fechas de manera f\xe1cil y configurable. Al aplicar este pipe, se pueden utilizar distintos formatos, como ",(0,n.jsx)(a.code,{children:"'medium'"}),", ",(0,n.jsx)(a.code,{children:"'short'"}),", ",(0,n.jsx)(a.code,{children:"'fullDate'"}),", etc."]}),(0,n.jsxs)(a.p,{children:["Agreguemos ",(0,n.jsx)(a.code,{children:"DatePipe"})," a una propiedad ",(0,n.jsx)(a.code,{children:"birthday"})," en la plantilla:"]}),(0,n.jsx)(r,{children:(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-typescript",children:"template: `\r\n    ...\r\n    <li>Fecha con \"date\": {{ birthday | date: 'medium' }}</li>\r\n`\n"})})}),(0,n.jsxs)(a.p,{children:[(0,n.jsx)(a.strong,{children:"Ejemplo de Salida"}),": Si ",(0,n.jsx)(a.code,{children:"birthday = new Date('2015-06-15T21:43:11')"}),", el resultado ser\xeda ",(0,n.jsx)(a.strong,{children:'"Jun 15, 2015, 9:43:11 PM"'})," en formato ",(0,n.jsx)(a.code,{children:"'medium'"}),"."]}),(0,n.jsxs)(a.p,{children:["Para experimentar, puedes cambiar el formato a opciones como ",(0,n.jsx)(a.code,{children:"'shortDate'"})," o ",(0,n.jsx)(a.code,{children:"'fullDate'"})," y observar c\xf3mo cambia la salida."]})]}),(0,n.jsxs)(r,{children:[(0,n.jsxs)(a.h4,{id:"paso-3-formatear-una-moneda-con-currencypipe",children:["Paso 3: Formatear una Moneda con ",(0,n.jsx)(a.code,{children:"CurrencyPipe"})]}),(0,n.jsxs)(a.p,{children:["El ",(0,n.jsx)(a.code,{children:"CurrencyPipe"})," permite mostrar valores monetarios. Si no se especifica un par\xe1metro, el pipe usa la configuraci\xf3n de moneda predeterminada. Sin embargo, puedes especificar una moneda y cambiar la representaci\xf3n."]}),(0,n.jsxs)(a.p,{children:["Agreguemos ",(0,n.jsx)(a.code,{children:"CurrencyPipe"})," a una propiedad ",(0,n.jsx)(a.code,{children:"cost"}),":"]}),(0,n.jsx)(r,{children:(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-typescript",children:'template: `\r\n    ...\r\n    <li>Moneda con "currency": {{ cost | currency }}</li>\r\n`\n'})})}),(0,n.jsxs)(a.p,{children:["Si ",(0,n.jsx)(a.code,{children:"cost = 2500"}),", el pipe ",(0,n.jsx)(a.code,{children:"CurrencyPipe"})," formatear\xe1 el valor en la moneda local predeterminada. Por ejemplo, podr\xeda mostrar ",(0,n.jsx)(a.strong,{children:'"$2,500.00"'})," en el caso de d\xf3lares."]}),(0,n.jsxs)(a.p,{children:["Tambi\xe9n puedes probar otros par\xe1metros como ",(0,n.jsx)(a.code,{children:"currency: 'EUR'"})," para cambiar la moneda a euros."]})]}),(0,n.jsxs)(r,{color:"cyan",children:[(0,n.jsx)(a.h4,{id:"ejemplo-completo",children:"Ejemplo completo"}),(0,n.jsx)(r,{children:(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-typescript",children:"import {Component} from '@angular/core';\r\nimport {DecimalPipe, DatePipe, CurrencyPipe} from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  template: `\r\n    <ul>\r\n      <li>Number with \"decimal\" {{ num | number : '3.2-2' }}</li>\r\n      <li>Date with \"date\" {{ birthday | date : 'medium' }}</li>\r\n      <li>Currency with \"currency\" {{ cost | currency }}</li>\r\n    </ul>\r\n  `,\r\n  standalone: true,\r\n  imports: [DecimalPipe, DatePipe, CurrencyPipe],\r\n})\r\nexport class AppComponent {\r\n  num = 103.1234;\r\n  birthday = new Date(2023, 3, 2);\r\n  cost = 4560.34;\r\n}\n"})})})]})]}),"\n",(0,n.jsx)(a.p,{children:"Los pipes en Angular permiten formatear datos directamente en la vista, ofreciendo flexibilidad y limpieza en la presentaci\xf3n de la informaci\xf3n. Angular incluye muchos pipes integrados, pero tambi\xe9n es posible crear pipes personalizados si los existentes no cumplen con tus necesidades."})]})}function p(e={}){const{wrapper:a}={...(0,o.R)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(t,{...e})}):t(e)}},8453:(e,a,r)=>{r.d(a,{R:()=>i,x:()=>c});var n=r(6540);const o={},s=n.createContext(o);function i(e){const a=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function c(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),n.createElement(s.Provider,{value:a},e.children)}}}]);